

@{
    ViewBag.Title = "PolicyDetails";

}
<link href="~/assets/css/date-picker.min.css" rel="stylesheet" /><link href="~/assets/waitme/waitMe.min.css" rel="stylesheet" />
<script src="~/assets/waitme/waitMe.min.js"></script>
<script src="~/assets/waitme/waitMe.min.js"></script>
<link rel="stylesheet" href="http://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
<script src="http://code.jquery.com/jquery-1.9.1.js"></script>
<script src="http://code.jquery.com/ui/1.10.3/jquery-ui.js"></script>
<style>
    #model_vehicledetails {
        /*top: 25% !important;
        left: -25% !important;*/
    }

    #pageloader {
        /*background: rgba( 255, 255, 255, 0.8 );*/
        display: none;
        height: 100%;
        position: fixed;
        width: 100%;
        z-index: 9999;
    }

        #pageloader img {
            left: 38%;
            margin-left: -50px;
            margin-top: -32px;
            position: absolute;
            top: 20%;
        }


        @@media only screen and (max-width: 740px) {
            .comlogo {
                width:35%;
            }

}
</style>
<div>
    <div ng-app="myApp">
        <div id="" ng-controller="myResultCtrl">

            <!-- Mobile Filters -->
            <div class="row-box mobile-fil-b m-top2">
                <div class="title-1">Filters </div>
                <i class="fa fa-filter ml-auto" aria-hidden="true"></i>
            </div>
            <div id="pageloader">
                <img src="~/assets/images/loader_3.gif" alt="processing..." />
            </div>
            <section id="" class="padding-sm quotes inputdisabled light-bg m-top2">
                <div class="container waitMe_body">
                    <div style="background:#fff" id="" class="ins-filter">
                        <div class="row a-item-c">
                            <div class="col-md-12 col-lg-5 dropdown">
                                <div class="row-box">
                                    <div class="vehical-details-section">
                                        <p> {{FirstQuote.ModelName}} {{FirstQuote.VariantName}} {{FirstQuote.Fuel}}</p>
                                        <ul class="list-f">
                                            <li>Private Car</li>
                                            <li>{{FirstQuote.ManufactureYear}}</li>
                                            <li>{{FirstQuote.Fuel}}</li>
                                            <li>{{FirstQuote.RTOCode}}</li>
                                        </ul>
                                    </div>
                                    <div class="edit-tooltip align-self-center">
                                        <a href="#" class="btn btn-br-sm inputdisabled" id="btn_vehicledetails">Edit</a>
                                    </div>
                                    <div class="modal" id="model_vehicledetails" tabindex="-1" role="dialog" aria-hidden="true" style="">
                                        <div class="modal-dialog">
                                            <div class="modal-content">
                                                <div class="modal-header">
                                                    <h5 class="modal-title">
                                                        <span class="glyphicon glyphicon-search" aria-hidden="true"></span>
                                                        &nbsp;{{FirstQuote.ModelName}} {{FirstQuote.VariantName}} {{FirstQuote.Fuel}}

                                                    </h5>
                                                    <a href="@Url.Action("CarDetails","PrivateCar")" class="btn btn-br-sm">Change</a>
                                                </div>
                                                <div class="modal-body">
                                                    <div class="row a-item-c mt-3 mb-3">
                                                        <div class="col-md-4"><label>Fuel Type</label></div>
                                                        <div class="col-md-8">
                                                            <select name="ddlfueltype" id="ddlfueltype" class="form-control"
                                                                    ng-change="changefueltype()" ng-model="fueltype" ng-options="fuel.fueltype for fuel in fuellist track by fuel.fueltype">
                                                                <option value="" disabled="" class="" selected="selected">Select Fuel Type</option>
                                                            </select>
                                                        </div>
                                                    </div>
                                                    <div class="row a-item-c mt-3 mb-3" auto-close="disabled">
                                                        <div class="col-md-4"><label> Variant</label></div>
                                                        <div class="col-md-8">
                                                            <select name="ddlvariant" class="form-control"
                                                                    ng-model="variant" ng-options="variant.variantname for variant in variantlist track by variant.variantid">
                                                                <option value="" disabled="" class="" selected="selected">Select Variant</option>
                                                            </select>
                                                        </div>
                                                    </div>
                                                    <div class="row a-item-c mt-3 mb-3">
                                                        <div class="col-md-4"><label>Registration Date</label></div>
                                                        <div class="col-md-8 ">
                                                            <input readonly="readonly" ng-model="regdate" id="regdate" class="regdate form-control datepicker" autocomplete="off" />
                                                        </div>
                                                    </div>
                                                    <div class="row a-item-c mt-3 mb-3">
                                                        <div class="col-md-4"><label>Manufacturing Date</label></div>
                                                        <div class="col-md-8 ">
                                                            <input placeholder="Select Date" readonly="readonly" ng-model="manufdate" id="manufacturingmonth" class="manufdate form-control datepicker" />
                                                            <span style="color:red" id="v_manufdate"></span>
                                                        </div>

                                                    </div>
                                                </div>
                                                <div class="modal-footer" style="justify-content: center !important">
                                                    <button ng-click="closemodal()" class="btn btn-br btn-sm">Close</button>
                                                    <button ng-click="changeQuote()" class="btn btn-pink btn-sm">Update</button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            @*<div class="col-md-6 col-lg-2 br-l-r text-c dropdown">
                                    <label>NCB is set to</label>
                                    <a class="edit-ncb-button" data-toggle="dropdown">0%</a>
                                    <div class="dropdown-menu flt-drop dropdown-menu-center min-w-21 drop-avoid">
                                        <div class="drop-header">
                                            <p>Confirm NCB Value</p>
                                        </div>
                                        <div class="drop-body">
                                            <p>Did you make a claim in your existing policy?</p>
                                            <div class="row-box mt-3">
                                                <button class="round-btn selected">Yes</button>
                                                <button class="round-btn ">No</button>
                                            </div>
                                            <div class="text-center br-t mt-4">
                                                <button class="btn btn-br btn-sm mr-2">Close</button>
                                                <button class="btn btn-pink btn-sm">Update</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>*@
                            <div class="col-md-6 col-lg-2 br-l-r text-c dropdown">
                                <label>NCB is set to</label>
                                <a class="edit-ncb-button" data-toggle="dropdown" ng-show="!NCBHide">{{CurrentNcb}}%</a>
                                <a class="edit-ncb-button" data-toggle="dropdown" ng-show="NCBHide">0%</a>
                                <div class="dropdown-menu flt-drop dropdown-menu-center min-w-21 drop-avoid" ng-hide="NCBHide">
                                    <div class="drop-header">
                                        <p>Confirm NCB Value</p>
                                    </div>
                                    <div id="selectnncbper" class="drop-body">
                                        <p>Did you make a claim in your existing policy?</p>
                                        <div class="row-box mt-3">
                                            <button class="round-btn" ng-class="{'selected':chkClaimed}" ng-click="claim_taken_existing_policy($event,'yes');">Yes</button>
                                            <button class="round-btn" ng-class="{'selected':!chkClaimed}" ng-click="claim_taken_existing_policy($event,'no');">No</button>
                                        </div>
                                        <div ng-show="!chkClaimed">
                                            <p>Select your existing No Claim Bonus (NCB)? {{ddlNCB}}</p>
                                            <div class="row-box mt-3">
                                                <button class="round-btn ncbchip" ng-click="ChangeNCBValue($event,'0')">0</button>
                                                <button class="round-btn ncbchip" ng-click="ChangeNCBValue($event,'20')">20</button>
                                                <button class="round-btn ncbchip" ng-click="ChangeNCBValue($event,'25')">25</button>
                                                <button class="round-btn ncbchip" ng-click="ChangeNCBValue($event,'35')">35</button>
                                                <button class="round-btn ncbchip" ng-click="ChangeNCBValue($event,'45')">45</button>
                                                <button class="round-btn ncbchip" ng-click="ChangeNCBValue($event,'50')">50</button>
                                                <button class="round-btn ncbchip" ng-click="ChangeNCBValue($event,'65')">65</button>
                                            </div>
                                        </div>
                                        <button ng-click="closemodal()" class="btn btn-br btn-sm mr-2">Close</button>
                                        <button class="btn btn-pink btn-sm" ng-click="UpdateIdvModel(txtIDV);">Update</button>
                                    </div>

                                </div>
                            </div>
                            <div style="text-align:left!important" class="col-md-6 col-lg-4 al-r">
                                <label ng-show="!IsNew">Existing Policy Expiry Date:</label>

                                <a class="" ng-show="!IsNew">{{ prvexpdate| date:'dd-MM-yyyy'}}</a>
                                @*edit-expiry-button*@
                                <br />
                                <label>Enquiry No </label>   : {{FirstQuote.EnqId}}
                            </div>
                        </div>
                    </div><!-- top filter -->
                    <div class="row a-item-c mt-4">
                        <div class="col-md-6 col-lg-2 dropdown">
                            <div class="insurer-dropdown inputdisabled" data-toggle="dropdown">
                                <label>Insurers</label>
                            </div>
                            <div class="dropdown-menu flt-drop dropdown-menu-center min-w-21 drop-avoid">
                                <div class="drop-header">
                                    <div class="row-box">
                                        <p class="mb-0">Insurers</p>
                                        <div class="edit-tooltip align-self-center">
                                            <a ng-click="closemodal()" class="btn btn-br-sm">Close</a>
                                        </div>
                                    </div>
                                </div>
                                <div class="drop-body">
                                    <div ng-repeat="res in companylistName" class="row-box">
                                        <div class="form-group form-check w-100 pl-0 mb-0">
                                            <input ng-click="checkinsurer(res)" type="checkbox" class="form-check-input aaa" name="chkcom" id="{{res}}" value="{{res}}" checked>
                                            <label class="form-check-label" for="{{res}}"> {{res}}</label>
                                        </div>
                                    </div>
                                    <div class="text-center br-t mt-4">
                                        <button id="sharePDF" ng-click="sharepdf()" class="btn btn-br btn-sm mr-2">Share PDF</button>

                                    </div>
                                </div>
                            </div>
                        </div>

                        <div ng-show="idvmodel" class="col-md-6 col-lg-3 dropdown">


                            <div class="insurer-dropdown inputdisabled" data-toggle="dropdown">
                                <label>Insured Value (IDV)</label><span class="ins-sel">Select your IDV</span>
                            </div>
                            <div class="dropdown-menu flt-drop dropdown-menu-center min-w-21 drop-avoid">
                                <div class="drop-header">
                                    <div class="row-box">
                                        <p class="mb-0">Insured Value (IDV)</p>
                                    </div>
                                </div>
                                <div class="drop-body">
                                    <p class="drop-title">Set By</p>
                                    <div class="row-box">
                                        <div class="form-group form-check w-100 pl-0 mb-0">
                                            <input class="form-check-input" ng-click="selectidvoption(1)" type="radio" name="idv" id="lowestIDV" value="lowestIDV">
                                            <label class="form-check-label" for="lowestIDV">
                                                Lowest IDV
                                            </label>
                                        </div>
                                        @*<div class="form-group form-check w-100 pl-0 mb-0">
                                                <input class="form-check-input" type="radio" name="radios" id="Recommended" value="Recommended">
                                                <label class="form-check-label" for="Recommended">
                                                    Recommended IDV
                                                </label>
                                            </div>*@
                                        <div class="form-group form-check w-100 pl-0 mb-0">
                                            <input ng-click="selectidvoption(2)" class="form-check-input" type="radio" name="idv" id="maximumIDV" value="maximumIDV">
                                            <label class="form-check-label" for="maximumIDV">
                                                Maximum IDV
                                            </label>
                                        </div>
                                        <div class="form-group form-check w-100 pl-0 mb-0">
                                            <input class="form-check-input" ng-click="selectidvoption(3)" type="radio" name="idv" id="Choose-IDV" value="" checked>
                                            <label class="form-check-label" for="Choose-IDV">
                                                Choose Your IDV
                                            </label>
                                            <input value="{{minIDV}}" type="text" ng-min="minIDV" ng-max="maxIDV" maxlength="7" onkeyup="this.value = this.value.replace(/[^0-9]/g, '');" ng-pattern="/^\d+$/" name="txtIDV" ng-model="txtIDV" class="form-control chooseidv show-idv" id="txtIDV" />
                                            <div class="slidecontainer chooseidv">
                                                <div class="row-box idv-labels"><span class="min-idv-text">Min IDV</span><span class="max-idv-text">Max IDV</span></div>
                                                <input type="range" min="{{minIDV}}" max="{{maxIDV}}" class="range-slider" id="myRange">
                                                <div class="row-box idv-values">
                                                    <span class="min-idv-value">₹ {{minIDV}} </span><span class="max-idv-value">₹ {{maxIDV}} </span>
                                                </div>

                                                <spna style="color:red" id="v_idv"></spna>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="text-center br-t mt-4">
                                        <button ng-click="closemodal()" class="btn btn-br btn-sm mr-2">Close</button>
                                        <button ng-click="UpdateIdvModel(txtIDV);" class="btn btn-pink btn-sm">Update</button>
                                    </div>
                                    <p class="w-100 text-sm mt-3">Note: IDV should be 10% less than previous year's IDV, as per the depreciation norms of Indian Motor Tariff. Insurers consider the same for total loss or theft claims.</p>
                                </div>
                            </div>
                        </div>
                        <div ng-show="addonsmodel" class="col-md-6 col-lg-2 dropdown">
                            <div class="insurer-dropdown inputdisabled" data-toggle="dropdown">
                                <label>Select Addons</label>
                            </div>
                            <div class="dropdown-menu flt-drop dropdown-menu-center min-w-21 drop-avoid">
                                <div class="drop-header">
                                    <div class="row-box">
                                        <p class="mb-0">Select Addons</p>
                                        <div class="edit-tooltip align-self-center">
                                            <a ng-click="clearaddons()" class="btn btn-br-sm">Clear All</a>
                                        </div>
                                    </div>
                                </div>
                                <div class="drop-body">
                                    <div class="row-box">
                                        <p class="drop-title">Addons</p>
                                        @foreach (var item in ViewBag.Addolist)
                                        {
                                            <div class="form-group form-check w-100 pl-0 mb-0">
                                                <input type="checkbox" name="addons" class="form-check-input addonchk" addonid="@item.addonid" addonname="@item.addonname" value="@item.shortname" id="chk_@item.addonid">
                                                <label class="form-check-label" for="chk_@item.addonid">@item.addonname</label>
                                            </div>
                                        }

                                    </div>
                                    <div class="text-center br-t mt-4 mb-2">
                                        <button ng-click="UpdateAddonModel();" class="btn btn-pink btn-sm">Submit</button>
                                        <button ng-click="closemodal()" class="btn btn-br btn-sm mr-2">Close</button>
                                        @*<button class="btn btn-pink btn-sm">Submit</button>*@
                                    </div>
                                </div>
                            </div>
                            <div class="dropdown-menu flt-drop dropdown-menu-center min-w-21 drop-avoid">
                                <div class="drop-header">
                                    <div class="row-box">
                                        <p class="mb-0">Select Addons</p>
                                        <div class="edit-tooltip align-self-center">
                                            <a ng-click="clearaddons()" class="btn btn-br-sm">Clear All</a>
                                        </div>
                                    </div>
                                </div>
                                <div class="drop-body">
                                    <div class="row-box">
                                        @foreach (var item in ViewBag.Addolist)
                                        {
                                            <div class="form-group form-check w-100 pl-0 mb-0">
                                                <input type="checkbox" class="form-check-input addonchk" addonid="@item.addonid" addonname="@item.addonname" value="@item.shortname" id="chk_@item.addonid">
                                                <label class="form-check-label" for="chk_@item.addonid">@item.addonname</label>
                                            </div>
                                        }
                                    </div>

                                    <div class="text-center br-t mt-4">
                                        <button ng-click="closemodal()" class="btn btn-br btn-sm mr-2">Close</button>

                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6 col-lg-3 dropdown">
                            <div class="insurer-dropdown inputdisabled" data-toggle="dropdown">
                                <label>Select Accessories & Discount</label>
                            </div>
                            <div class="dropdown-menu flt-drop dropdown-menu-center min-w-21 drop-avoid">
                                <div class="drop-header">
                                    <div class="row-box">
                                        <p class="mb-0">Select Accessories & Discount</p>
                                    </div>
                                </div><div id="covers">
                                    <div class="drop-body">
                                        <p class="drop-title">Accessories</p>
                                        <div ng-show="Electrical" class="access-check">
                                            <div class="form-group form-check w-100 pl-0 mb-0">
                                                <input value="txt_elec" type="checkbox" class="form-check-input accchk" id="chkelec">
                                                <label class="form-check-label" for="chkelec">Electrical Accessories</label>
                                            </div>
                                            <div class="row-box accessories-input" id="div_elec" style="display:none">
                                                <div class="user-input-section">

                                                    <input type="number" ng-model="txt_elec" id="txt_elec" class="form-control " ng-keyup="showsubmit()" onkeydown="return numberOnly(event);" ng-min="1000" ng-max="minIDV">
                                                </div>
                                                <div class="min-section"><span>Min Amount</span><span>1,000</span></div>
                                                <div class="max-section"><span>Max Amount</span><span>{{minIDV}}</span></div>
                                            </div>
                                        </div>
                                        <div ng-show="NonElectrical" class="access-check">
                                            <div class="form-group form-check w-100 pl-0 mb-0">
                                                <input value="txt_nonelec" type="checkbox" class="form-check-input accchk" id="chknonelec">
                                                <label class="form-check-label" for="chknonelec">Non-Electrical Accessories</label>
                                            </div>
                                            <div class="row-box accessories-input" id="div_nonelec" style="display:none">
                                                <div class="user-input-section"><input type="number" ng-model="txt_nonelec" id="txt_nonelec" class="form-control" onkeydown="return numberOnly(event);" ng-keyup="showsubmit()" value="" ng-min="1000" ng-max="minIDV"></div>
                                                <div class="min-section"><span>Min Amount</span><span>1,000</span></div>
                                                <div class="max-section"><span>Max Amount</span><span>{{minIDV}}</span></div>
                                            </div>
                                        </div>
                                        <div ng-show="ExternalCNG" class="access-check">
                                            <div class="form-group form-check w-100 pl-0 mb-0">
                                                <input value="txt_bifuel" type="checkbox" class="form-check-input accchk" id="chkbifuel">
                                                <label class="form-check-label" for="chkbifuel">External CNG Accessories</label>
                                            </div>
                                            <div class="row-box accessories-input" id="div_bifuel" style="display:none">
                                                <div class="user-input-section">
                                                    <input type="number" ng-model="txt_bifuel" id="txt_bifuel" class="form-control" ng-keyup="showsubmit()" onkeydown="return numberOnly(event);" value="" ng-min="1000" ng-max="50000">
                                                </div>
                                                <div class="min-section"><span>Min Amount</span><span>1,000</span></div>
                                                <div class="max-section"><span>Max Amount</span><span>50,000</span></div>
                                            </div>
                                        </div>
                                        <p style="color:red; font-size:10px;" id="acc_error"></p>
                                        <button ng-click="UpdateAccessory(txt_elec,txt_nonelec,txt_bifuel);" class="btn btn-pink btn-sm" style="display:none;" @*ng-show="btnaccupdate"*@>Submit</button>
                                        <div ng-show="AdditionalCovers">
                                            <hr class="w-100">
                                            <p class="drop-title">Additional Covers</p>

                                            <div class="form-group form-check w-100 pl-0 mb-0">
                                                <input value="chk_paowndriver" type="checkbox" class="form-check-input addoncover" name="chkowndriver" id="chkowndriver">
                                                <label class="form-check-label" for="chkowndriver"> Owner Driver PA Cover</label>
                                            </div>
                                            <div class="form-group form-check w-100 pl-0 mb-0">
                                                <input value="chk_llemployee" type="checkbox" class="form-check-input  addoncover" name="chkllemployee" id="chkllemployee">
                                                <label class="form-check-label" for="chkllemployee"> Legal Liability of Employee</label>
                                            </div>
                                            <div class="form-group form-check w-100 pl-0 mb-0">
                                                <input value="ddl_llpaiddriver" type="checkbox" class="form-check-input addoncover" name="chkllpaiddriver" id="chkllpaiddriver">
                                                <label class="form-check-label" for="chkllpaiddriver"> Legal Liability to Paid Driver</label>
                                            </div>
                                            <div class="row-box accessories-input" id="div_llpaiddriver" style="display:none">
                                                <div>
                                                    <select id="ddl_llpaiddriver" class="form-control ddladdon" ng-model="llpaiddriver">
                                                        <option value="" disabled>Select No Of drivers</option>
                                                        <option value="1">1</option>
                                                        <option value="2">2</option>
                                                    </select>
                                                </div>
                                            </div>
                                            <div class="form-group form-check w-100 pl-0 mb-0">
                                                <input value="ddl_paiddriver" type="checkbox" class="form-check-input addoncover" name="chkpaiddriver" id="chkpaiddriver">
                                                <label class="form-check-label" for="chkpaiddriver"> PA Cover for Paid Driver</label>
                                            </div>
                                            <div class="row-box accessories-input" id="div_paiddriver" style="display:none">
                                                <div>
                                                    <select id="ddl_paiddriver" class="form-control ddladdon" ng-model="paiddriver">
                                                        <option value="" disabled>Select Sum Insured</option>
                                                        <option value="10000">10,000</option>
                                                        <option value="20000">20,000</option>
                                                        <option value="30000">30,000</option>
                                                        <option value="40000">40,000</option>
                                                        <option value="50000">50,000</option>
                                                        <option value="60000">60,000</option>
                                                        <option value="70000">70,000</option>
                                                        <option value="80000">80,000</option>
                                                        <option value="90000">90,000</option>
                                                        <option value="100000">1,00,000</option>
                                                        <option value="110000">1,10,000</option>
                                                        <option value="120000">1,20,000</option>
                                                        <option value="130000">1,30,000</option>
                                                        <option value="140000">1,40,000</option>
                                                        <option value="150000">1,50,000</option>
                                                        <option value="160000">1,60,000</option>
                                                        <option value="170000">1,70,000</option>
                                                        <option value="180000">1,80,000</option>
                                                        <option value="190000">1,90,000</option>
                                                        <option value="200000">2,00,000</option>
                                                    </select>
                                                </div>
                                            </div>
                                            <div class="form-group form-check w-100 pl-0 mb-0">
                                                <input value="ddl_unnamed" type="checkbox" class="form-check-input addoncover" name="chkunnamed" id="chkunnamed">
                                                <label class="form-check-label" for="chkunnamed"> PA Cover for unnamed persons</label>
                                            </div>
                                            <div class="row-box accessories-input" id="div_unnamed" style="display:none">
                                                <div>
                                                    @*<input type="number" id="txt_unnamed" class="form-control" value="" placeholder="Rs." >*@
                                                    <select id="ddl_unnamed" class="form-control ddladdon" ng-model="unnamed">
                                                        <option value="" disabled>Select Sum Insured</option>
                                                        <option value="10000">10,000</option>
                                                        <option value="20000">20,000</option>
                                                        <option value="30000">30,000</option>
                                                        <option value="40000">40,000</option>
                                                        <option value="50000">50,000</option>
                                                        <option value="60000">60,000</option>
                                                        <option value="70000">70,000</option>
                                                        <option value="80000">80,000</option>
                                                        <option value="90000">90,000</option>
                                                        <option value="100000">1,00,000</option>
                                                        <option value="110000">1,10,000</option>
                                                        <option value="120000">1,20,000</option>
                                                        <option value="130000">1,30,000</option>
                                                        <option value="140000">1,40,000</option>
                                                        <option value="150000">1,50,000</option>
                                                        <option value="160000">1,60,000</option>
                                                        <option value="170000">1,70,000</option>
                                                        <option value="180000">1,80,000</option>
                                                        <option value="190000">1,90,000</option>
                                                        <option value="200000">2,00,000</option>
                                                    </select>
                                                </div>
                                            </div>



                                        </div>

                                        <div class="text-center br-t mt-4">
                                            <p style="color:red; font-size:10px;" id="cover_error"></p>
                                            <button ng-click="UpdateAdditionalCover();" class="btn btn-pink btn-sm" id="btncoverupdate">Submit</button>
                                            <button ng-click="closemodal()" class="btn btn-br btn-sm mr-2">Close</button>

                                        </div>
                                    </div>
                                </div>
                            </div>

                        </div>
                        <div class="col-md-6 col-lg-2 dropdown">
                            <select id="sorting" class="form-control" ng-model="sortBy">
                                <option value="" disabled selected>Sort By</option>
                                <option value="IDV">Lowest IDV</option>
                                <option value="PremiumBreakUpDetails.NetPremium">Lowest Premium</option>
                                <option value="-IDV">Highest IDV</option>
                                <option value="-PremiumBreakUpDetails.NetPremium">Highest Premium</option>
                            </select>
                        </div>

                    </div>
                </div>

            </section>
            <div class="container waitMe_body" ng-show="DontKnowPreviousInsurer">
                <div class="col-md-12 col-lg-5 dropdown">
                    <div class="row-box">
                        This quotes are break-in.This is required inspection.!!!
                    </div>
                </div>

            </div>

            <section id="progress" class="inputdisabled padding-sm quotes-list">

                <div id="dd" class="container" ng-repeat="result in QuotationRes  |orderBy:sortBy" callback-on-end="alert('done')">

                    <div style="height:80% !important" class="inputdisabled fadeInDown animated q-box div_{{result.CompanyName}}">
                        <div class="plan q-box-padd" id="div_{{result.CompanyName}}" data-minidv="{{result.MinIDV}}" data-maxidv="{{result.MaxIDV}}" data-basicod="{{result.PremiumBreakUpDetails.BasicODPremium}}" data-thirdpartycover="{{result.PremiumBreakUpDetails.BasicThirdPartyLiability}}" data-zerodep="{{result.PremiumBreakUpDetails.ZeroDepPremium | number:0}}" data-rimprot="{{result.PremiumBreakUpDetails.RimProtectionPremium}}"
                             data-engineprot="{{result.PremiumBreakUpDetails.EngineProtectorPremium}}" data-invoiceprot="{{result.PremiumBreakUpDetails.InvoicePriceCoverPremium}}"
                             data-consumables="{{result.PremiumBreakUpDetails.CostOfConsumablesPremium}}" data-ncbprotect="{{result.PremiumBreakUpDetails.NcbProtectorPremium}}"
                             data-keylock="{{result.PremiumBreakUpDetails.KeyReplacementPremium}}"
                             data-tyre="{{result.PremiumBreakUpDetails.TyreProtect}}" data-personalloss="{{result.PremiumBreakUpDetails.LossOfPersonalBelongingPremium}}"
                             data-netprm={{result.PremiumBreakUpDetails.NetPremium}} data-prm={{result.FinalPremium}} data-EmergencyAssprm="{{result.PremiumBreakUpDetails.EmergencyAssistancePremium}}"
                             data-roadside="{{result.PremiumBreakUpDetails.RSAPremium}}" data-idv={{result.IDV}} data-pacover="{{result.PremiumBreakUpDetails.PACoverToOwnDriver}}"
                             data-antitheft="{{result.PremiumBreakUpDetails.AntiTheftDiscount }}" data-paiddriver="{{result.PremiumBreakUpDetails.PAToPaidDriver }}" data-LLpaiddriver="{{result.PremiumBreakUpDetails.LLToPaidDriver }}"
                             data-LLemployee="{{result.PremiumBreakUpDetails.LLToPaidEmployee }}" data-electrical="{{result.PremiumBreakUpDetails.ElecAccessoriesPremium }}" data-nonelectrical="{{result.PremiumBreakUpDetails.NonElecAccessoriesPremium }}" data-bifuel="{{result.PremiumBreakUpDetails.CNGLPGKitPremium }}" data-unnamedperson="{{result.PremiumBreakUpDetails.PACoverToUnNamedPerson }}"
                             data-tpbifuel="{{result.PremiumBreakUpDetails.TPCNGLPGPremium }}"
                             data-ncbdiscount="{{result.PremiumBreakUpDetails.NCBDiscount }}"
                             data-ncbwithzerodep="{{result.PremiumBreakUpDetails.LoadingDiscount }}"
                             data-gst="{{result.PremiumBreakUpDetails.ServiceTax }}">
                            <div class="row">
                                <div style="text-align:center;top:5px" class="col-md-2 col-lg-2 com-logo brl">
                                    @*<img class="img-fluid" src="/assets/images/ns.png" alt="ns">*@
                                    <img class="img-fluid comlogo" src="/assets/images/{{result.CompanyName}}.png" />
                                </div>
                                <div style="text-align:center;top:" class="col-md-3 col-lg-3 brl">
                                    <label>IDV</label>
                                    <div class="price1">₹ {{result.IDV}}</div>
                                </div>
                                <div style="text-align:center;" class="col-md-4 col-lg-4 addons brl">
                                    <div class="">
                                        <div class="vehical-details-section">
                                            <label>Addons</label>

                                            <div style="text-align:left">
                                                <div class="addondiv" ng-show="result.FreeAddonCover.RepairFiberGlass">
                                                    <label>Repair Glass / Fiber/plastic | Free</label>
                                                </div>
                                                <div class="addondiv" ng-show="result.PremiumBreakUpDetails.ZeroDepPremium > 0">
                                                    <label>Zero Depreciation</label>
                                                </div>
                                                <div class="addondiv" ng-show="result.FreeAddonCover.IsZeroDeperation">
                                                    <label>Zero Depreciation | InCluded</label>
                                                </div>
                                                <div class="addondiv" ng-show="result.PremiumBreakUpDetails.RSAPremium>0">
                                                    <label>24x7 Roadside Assistance</label>
                                                </div>
                                                <div class="addondiv" ng-show="result.FreeAddonCover.IsRoadSideAssistance">
                                                    <label>24x7 Roadside Assistance | Free</label>
                                                </div>
                                                <div class="addondiv" ng-show="result.PremiumBreakUpDetails.EngineProtectorPremium>0">
                                                    <label>Engine Protection Cover</label>
                                                </div>
                                                <div class="addondiv" ng-show="result.FreeAddonCover.IsEngineProtector">
                                                    <label>Engine Protection Cover | Free</label>
                                                </div>
                                                <div class="addondiv" ng-show="result.PremiumBreakUpDetails.NcbProtectorPremium>0">
                                                    <label>NCB Protector</label>
                                                </div>
                                                <div class="addondiv" ng-show="result.FreeAddonCover.IsNCBProtection">
                                                    <label>NCB Protector | Free</label>
                                                </div>
                                                <div class="addondiv" ng-show="result.PremiumBreakUpDetails.KeyReplacementPremium>0">
                                                    <label>Key & Lock Replacement</label>
                                                </div>
                                                <div class="addondiv" ng-show="result.FreeAddonCover.IsLossofKey">
                                                    <label>Key & Lock Replacement | Free</label>
                                                </div>
                                                <div class="addondiv" ng-show="result.PremiumBreakUpDetails.CostOfConsumablesPremium>0">
                                                    <label>Consumables</label>
                                                </div>
                                                <div class="addondiv" ng-show="result.FreeAddonCover.IsConsumables">
                                                    <label>Consumables | Free</label>
                                                </div>
                                                <div class="addondiv" ng-show="result.PremiumBreakUpDetails.InvoicePriceCoverPremium>0">
                                                    <label>Invoice Price</label>
                                                </div>
                                                <div class="addondiv" ng-show="result.FreeAddonCover.IsReturntoInvoice">
                                                    <label>Invoice Price | Free</label>
                                                </div>
                                                <div class="addondiv" ng-show="result.PremiumBreakUpDetails.TyreProtect>0">
                                                    <label>Tyre Protector</label>
                                                </div>
                                                <div class="addondiv" ng-show="result.FreeAddonCover.IsTyreCover">
                                                    <label>Tyre Protector | Free</label>
                                                </div>
                                                <div class="addondiv" ng-show="result.PremiumBreakUpDetails.RimProtectionPremium>0">
                                                    <label>RIM Damage Cover</label>
                                                </div>
                                                <div class="addondiv" ng-show="result.FreeAddonCover.IsRimProtectionCover">
                                                    <label>RIM Damage Cover | Free</label>
                                                </div>
                                                <div class="addondiv" ng-show="result.PremiumBreakUpDetails.LossOfPersonalBelongingPremium>0">
                                                    <label>Loss of Personal Belongings</label>
                                                </div>
                                                <div class="addondiv" ng-show="result.FreeAddonCover.IsLossofpersonalBelonging">
                                                    <label>Loss of Personal Belongings | Free</label>
                                                </div>
                                                <div class="addondiv" ng-show="result.PremiumBreakUpDetails.EmergencyAssistancePremium>0">
                                                    <label>Emergency Assistance</label>
                                                </div>
                                                <div class="addondiv" ng-show="result.FreeAddonCover.EmergencyAssistancePremium">
                                                    <label>Emergency Assistance | Free</label>
                                                </div>

                                            </div>
                                            @*{{result.PremiumBreakUpDetails.NetPremium}}*@
                                            <div class="addondiv" style="display:none" id="{{result.CompanyName}}_addonwithval">
                                                <p class="zerodep" ng-show="result.PremiumBreakUpDetails.ZeroDepPremium>0">
                                                    <span id='spnaddonname'>Zero Depreciation</span><span id='spnaddonval' style='float:right;'>₹ {{result.PremiumBreakUpDetails.ZeroDepPremium}} </span>
                                                </p>

                                                <p class="roadside" ng-show="result.PremiumBreakUpDetails.RSAPremium>0"><span id='spnaddonname'>24x7 Roadside Assistance</span><span id='spnaddonval' style='float:right;'>₹ {{result.PremiumBreakUpDetails.RSAPremium}} </span></p>
                                                <p class="engine" ng-show="result.PremiumBreakUpDetails.EngineProtectorPremium>0"><span id='spnaddonname'>Engine Protection Cover</span><span id='spnaddonval' style='float:right;'>₹ {{result.PremiumBreakUpDetails.EngineProtectorPremium}} </span></p>
                                                <p class="ncbprotect" ng-show="result.PremiumBreakUpDetails.NcbProtectorPremium>0"><span id='spnaddonname'>NCB Protector</span><span id='spnaddonval' style='float:right;'>₹ {{result.PremiumBreakUpDetails.NcbProtectorPremium}} </span></p>
                                                <p class="keylock" ng-show="result.PremiumBreakUpDetails.KeyReplacementPremium>0"><span id='spnaddonname'>Key & Lock Replacement</span><span id='spnaddonval' style='float:right;'>₹ {{result.PremiumBreakUpDetails.KeyReplacementPremium}} </span></p>
                                                <p class="consumables" ng-show="result.PremiumBreakUpDetails.CostOfConsumablesPremium>0"><span id='spnaddonname'>Consumables</span><span id='spnaddonval' style='float:right;'>₹ {{result.PremiumBreakUpDetails.CostOfConsumablesPremium}} </span></p>
                                                @*<p class="dailyallowance" ng-show="result.PremiumBreakUpDetails.ZeroDepPremium>0"><span id='spnaddonname'>Daily Allowance</span><span id='spnaddonval' style='float:right;'>₹ {{result.PremiumBreakUpDetails.InvoicePriceCoverPremium}} </span></p>*@
                                                <p class="invprice" ng-show="result.PremiumBreakUpDetails.InvoicePriceCoverPremium>0"><span id='spnaddonname'>Invoice Price</span><span id='spnaddonval' style='float:right;'>₹ {{result.PremiumBreakUpDetails.InvoicePriceCoverPremium}} </span></p>
                                                <p class="tyre" ng-show="result.PremiumBreakUpDetails.TyreProtect>0"><span id='spnaddonname'>Tyre Protector</span><span id='spnaddonval' style='float:right;'>₹ {{result.PremiumBreakUpDetails.TyreProtect}} </span></p>
                                                <p class="rim" ng-show="result.PremiumBreakUpDetails.RimProtectionPremium>0"><span id='spnaddonname'>RIM Damage Cover</span><span id='spnaddonval' style='float:right;'>₹ {{result.PremiumBreakUpDetails.RimProtectionPremium}} </span></p>
                                                <p class="personalloss" ng-show="result.PremiumBreakUpDetails.LossOfPersonalBelongingPremium>0"><span id='spnaddonname'>Loss of Personal Belongings</span><span id='spnaddonval' style='float:right;'>₹ {{result.PremiumBreakUpDetails.LossOfPersonalBelongingPremium}} </span></p>
                                                <p class="" ng-show="result.PremiumBreakUpDetails.EmergencyAssistancePremium>0"><span id='spnaddonname'>Emergency Transport and Hotel Expenses</span><span id='spnaddonval' style='float:right;'>₹ {{result.PremiumBreakUpDetails.EmergencyAssistancePremium}} </span></p>

                                            </div>

                                            <input type="hidden" id="{{result.CompanyName}}_totaladdon" value="{{result.PremiumBreakUpDetails.NetAddonPremium}}" />
                                        </div>
                                        <div class="edit-tooltip">

                                        </div>
                                    </div>
                                </div>
                                <div style="text-align:center;top:" class="col-md-3 col-lg-3 text-center brl">
                                    @*<div class="irda-amount">₹ 28,654</div>*@
                                    <label>Below quote is excluding GST </label>
                                    <button ng-disabled='disabledFlag' ng-click="GetProposal(result.CompanyName)" class="inputdisabled btnprm btn btn-pink btn-pr mt-1 mb-1">₹ <strong class="prem_{{result.CompanyName}}">{{result.PremiumBreakUpDetails.NetPremium}}</strong> <i class="fa fa-angle-right" aria-hidden="true"></i></button>
                                    @*<a href="@Url.Action("Proposal", "PrivateCar")?CompanyName={{result.CompanyName}}" class="btn btn-pink btn-pr mt-1 mb-1">₹ <strong class="prem_{{result.CompanyName}}">{{result.PremiumBreakUpDetails.NetPremium}}</strong> <i class="fa fa-angle-right" aria-hidden="true"></i></a>*@
                                    <a href="#" class="btn btn-link-sm selectMe inputdisabled" data-value="{{result}}" data-title="{{result.CompanyName}}">Premium Breakup</a>
                                </div>
                            </div>
                        </div>
                        <div class="q-box-bottom">
                            @*<ul class="list-f">
                                    <li>Reimbursement Within 7 Working Days For Non-Cashless</li>
                                    <li>Self-Video Claims</li>
                                </ul>*@
                        </div>
                    </div>

                </div>
                <div style="text-align:center">
                    <span ng-show="QuotationError.length == 1">
                        @*We did not get a quote from the following insurers <br/>
                            Might be possible reason at insurance company’s end like MMV decline or RTO restricted or some technical issue <br/>*@
                        The quotation from the following insurance company is not currently available due to technical reasons.

                    </span>
                    <span ng-show="QuotationError.length > 1">
                        The quotation from the  following insurance companies are not currently available due to technical reasons.

                    </span>
                    <div class="row justify-content-center">
                        <div class="col-md-2 col-lg-2 com-logo brl" ng-show="QuotationError.length > 0" ng-repeat="result in QuotationError |orderBy:sortBy">
                            <img style="width:70%" class="" src="/assets/images/{{result}}.png" />
                        </div>
                    </div>
                </div>
            </section>
            <div class="modal modal-policy fade" id="modal-policy" data-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="false">
                <div class="modal-dialog modal-lg">
                    <div class="modal-content ">
                        <div class="modal-body p-10 popup-sec">
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                            <div class="popup-head pop-padd">
                                <div class="row">
                                    <div class="col-sm-4 col-lg-4 com-logo">
                                        <img class="img-fluid" id="modalimg" src="" alt="ns">
                                    </div>
                                    <div class="col-sm-4 col-lg-4">
                                        <div class="price1">IDV :₹<strong id="prm_IDV"></strong></div>
                                    </div>
                                    <div class="col-sm-4 col-lg-4">
                                        <a href="#" class="btn btn-pink btn-pr mt-1 mb-1">₹<strong id="prm_TOT"></strong>  <i class="fa fa-angle-right" aria-hidden="true"></i></a>
                                    </div>
                                </div>
                            </div>
                            <ul class="nav nav-tabs nav-justified pop-tab" id="myTab" role="tablist">
                                @*<li class="nav-item" role="presentation">
                                        <a class="nav-link " id="what-tab" data-toggle="tab" href="#what" role="tab" aria-controls="what" aria-selected="true">What's Covered</a>
                                    </li>
                                    <li class="nav-item" role="presentation">
                                        <a class="nav-link" id="what-not-tab" data-toggle="tab" href="#what-not" role="tab" aria-controls="what-not" aria-selected="false">What's Not Covered</a>
                                    </li>*@
                                <li class="nav-item" role="presentation">
                                    <a class="nav-link active" id="premium-tab" data-toggle="tab" href="#premium" role="tab" aria-controls="premium" aria-selected="false">Premium Breakup</a>
                                </li>
                                @*<li class="nav-item" role="presentation">
                                        <a class="nav-link" id="cashless-tab" data-toggle="tab" href="#cashless" role="tab" aria-controls="cashless" aria-selected="false">Cashless Garages</a>
                                    </li>*@
                            </ul>
                            <div class="tab-content pop-padd" id="myTabContent">
                                <div class="tab-pane fade  " id="what" role="tabpanel" aria-labelledby="what-tab">
                                    <div class="policy-inclusion">
                                        <h5>Policy Inclusions</h5>
                                        <ul class="row-box inclusion-list">
                                            <li>
                                                <div class="p-inc-box" data-toggle="tooltip" data-placement="bottom" title="This accident cover provides financial assistance to the car's owner in case of disablement or death due to an accident. Every individual vehicle owner must opt for this cover as per IRDAI guidelines, except for those without a driving license or having an existing Personal Accident cover of at least Rs. 15 lakhs.">
                                                    <img src="~/assets/images/car-damage.png" alt="Damage to your">
                                                    <span class="text2">Damage to your car (1 year)</span>
                                                </div>
                                            </li>
                                            <li>
                                                <div class="p-inc-box">
                                                    <img src="~/assets/images/car-theft.png" alt="Theft of your car">
                                                    <span class="text2">Theft of your car </span>
                                                </div>
                                            </li>
                                            <li>
                                                <div class="p-inc-box">
                                                    <img src="~/assets/images/natural.png" alt="Natural Calamities">
                                                    <span class="text2">Natural Calamities </span>
                                                </div>
                                            </li>
                                            <li>
                                                <div class="p-inc-box">
                                                    <img src="~/assets/images/hazards.png" alt="Man-made hazards">
                                                    <span class="text2">Man-made hazards </span>
                                                </div>
                                            </li>
                                            <li>
                                                <div class="p-inc-box">
                                                    <img src="~/assets/images/fire.png" alt="Fire and Explosions">
                                                    <span class="text2">Fire and Explosions </span>
                                                </div>
                                            </li>
                                            <li>
                                                <div class="p-inc-box">
                                                    <img src="~/assets/images/during-transit.png" alt="Damage During Transit">
                                                    <span class="text2">Damage During Transit </span>
                                                </div>
                                            </li>
                                        </ul>
                                        <div class="row-box">
                                            <a href="#" class="btn btn-br m-auto">View All</a>
                                        </div>
                                    </div>
                                    <hr class="mt-4 mb-4">
                                    <div class="claim-coverage">
                                        <h5>Claims Coverage </h5>
                                        <ul class="row-box claims mt-4">
                                            <li>
                                                <p>Cashless Claims at 26 Garages near you</p>
                                                <a href="#" class="btn-lx">Know more <i class="fa fa-angle-right" aria-hidden="true"></i></a>
                                            </li>
                                            <li>
                                                <p>Insurer offers <b>self-video claims</b>: self-upload video of car through Policybazaar's video inspection app for quick survey of damages.</p>
                                                <a href="#" class="btn-lx">Know more <i class="fa fa-angle-right" aria-hidden="true"></i></a>
                                            </li>
                                            <li>
                                                <p>For non-cashless claims, insurer will reimburse the claim amount within 7 working days of document/invoice submission.</p>
                                                <a href="#" class="btn-lx">Know more <i class="fa fa-angle-right" aria-hidden="true"></i></a>
                                            </li>
                                        </ul>
                                        <div class="row-box alert alert-warning" role="alert">
                                            How much will the insurer pay if you make a claim?
                                            <a href="#" class="btn-lx">Find Out <i class="fa fa-angle-right" aria-hidden="true"></i></a>
                                        </div>

                                    </div>
                                </div>
                                <div class="tab-pane fade" id="what-not" role="tabpanel" aria-labelledby="what-not-tab">
                                    <div class="policy-inclusion">
                                        <h5>Not included in policy</h5>
                                        <ul class="row-box inclusion-list">
                                            <li>
                                                <div class="p-inc-box" data-toggle="tooltip" data-placement="bottom" title="This accident cover provides financial assistance to the car's owner in case of disablement or death due to an accident. Every individual vehicle owner must opt for this cover as per IRDAI guidelines, except for those without a driving license or having an existing Personal Accident cover of at least Rs. 15 lakhs.">
                                                    <img src="~/assets/images/car-damage.png" alt="Damage to your">
                                                    <span class="text2">Damage to your car (1 year)</span>
                                                </div>
                                            </li>
                                            <li>
                                                <div class="p-inc-box">
                                                    <img src="~/assets/images/car-theft.png" alt="Theft of your car">
                                                    <span class="text2">Theft of your car </span>
                                                </div>
                                            </li>
                                            <li>
                                                <div class="p-inc-box">
                                                    <img src="~/assets/images/natural.png" alt="Natural Calamities">
                                                    <span class="text2">Natural Calamities </span>
                                                </div>
                                            </li>
                                            <li>
                                                <div class="p-inc-box">
                                                    <img src="~/assets/images/hazards.png" alt="Man-made hazards">
                                                    <span class="text2">Man-made hazards </span>
                                                </div>
                                            </li>
                                            <li>
                                                <div class="p-inc-box">
                                                    <img src="~/assets/images/fire.png" alt="Fire and Explosions">
                                                    <span class="text2">Fire and Explosions </span>
                                                </div>
                                            </li>
                                            <li>
                                                <div class="p-inc-box">
                                                    <img src="~/assets/images/during-transit.png" alt="Damage During Transit">
                                                    <span class="text2">Damage During Transit </span>
                                                </div>
                                            </li>
                                        </ul>
                                        <div class="row-box">
                                            <a href="#" class="btn btn-br m-auto">View All</a>
                                        </div>
                                    </div>
                                </div>
                                <div class="tab-pane fade show active" id="premium" role="tabpanel" aria-labelledby="premium-tab">
                                    <div class="media">
                                        <img src="~/assets/images/car-icon.png" class="align-self-center mr-3" alt="car">
                                        <div class="media-body">
                                            <p class="mb-0 ">{{FirstQuote.ModelName}} {{FirstQuote.VariantName}}</p>
                                            <ul class="list-f">
                                                <li>Private Car</li>
                                                <li>{{FirstQuote.ManufactureYear}}</li>
                                                <li>{{FirstQuote.Fuel}}</li>
                                                <li>{{FirstQuote.RTOCode}}</li>
                                            </ul>
                                        </div>
                                    </div>
                                    <hr>
                                    <h5>Premium Breakup</h5>
                                    <div class="mbdy">

                                    </div>
                                    <div class="head-sec mt-4">
                                        <h6 class="mb-2" style="background-color:#ef3b85;color:white;height:35px;padding-top: 1%;">Base Cover</h6>
                                        <div class="plan-box mt-2 mb-3">
                                            <b>Basic Own Damage Premium</b>
                                            <b style="float:right">₹<b id="prm_OD"></b> </b>
                                        </div>
                                        <div class="plan-box mt-2 mb-3" style="display:none" id="div_elecacc">
                                            <b>Electrical Accessory Premium</b>
                                            <b style="float:right">₹<b id="prm_electrical"></b> </b>
                                        </div>
                                        <div class="plan-box mt-2 mb-3" style="display:none" id="div_nonelecacc">
                                            <b>Non-Electrical Accessory Premium</b>
                                            <b style="float:right">₹<span id="prm_nonelectrical"></span> </b>
                                        </div>
                                        <div class="plan-box mt-2 mb-3" style="display:none" id="div_cngacc">
                                            <b>CNG/LPG Kit Premium</b>
                                            <b style="float:right">₹<b id="prm_cng"></b> </b>
                                        </div>
                                        <div class="plan-box mt-2 mb-2">
                                            <span>Total OD Premium</span><span style="float:right">₹<span id="prm_NOD"></span></span>
                                        </div>
                                    </div>
                                    <div class="head-sec mt-4">
                                        <h6 class="mb-2" style="background-color:#ef3b85;color:white;height:35px;padding-top: 1%;">Discounts(-)</h6>
                                        <div class="plan-box mt-2 mb-2">
                                            <b>

                                                No-Claim Bonus <span ng-show="!NCBHide"><b style="color:black">{{CurrentNcb}}%</b></span>
                                                <span ng-show="NCBHide"><b style="color:black"> 0%</b></span>
                                            </b>
                                            <b style="float:right"> ₹<span id="prm_NCB"></span> </b>
                                        </div>
                                        <div class="plan-box mt-2 mb-2">
                                            <b>Other Discounts</b>
                                            <b style="float:right"> ₹<span id="prm_DIS"></span></b>
                                        </div>
                                        <div class="plan-box mt-2 mb-2">
                                            <span>Total Discounts</span>
                                            <span style="float:right"> ₹<span id="prm_NDIS"></span></span>
                                        </div>
                                    </div>
                                    <div class="head-sec mt-4">
                                        <h6 class="mb-2" style="background-color:#ef3b85;color:white;height:35px;padding-top: 1%;">TP Premium</h6>
                                        <div class="plan-box mt-2 mb-2">
                                            <b>Basic Third Party Liability</b>
                                            <b style="float:right">₹<b id="prm_TP"></b></b>
                                            <div class="plan-box mt-2 mb-2" style="display:none" id="div_OWNDRIVER">
                                                <b>PA Cover To Owned Driver </b>
                                                <b style="float:right">₹<b id="prm_Owndirver"></b></b>
                                            </div>
                                            <div class="plan-box mt-2 mb-2" style="display:none" id="div_PAIDDRIVER">
                                                <b>PA Cover To Paid Driver </b>
                                                <b style="float:right">₹<b id="prm_Paiddriver"></b></b>
                                            </div>
                                            <div class="plan-box mt-2 mb-2" style="display:none" id="div_TPCNG">
                                                <b>TP CNG/LPG Kit Premium </b>
                                                <b style="float:right">₹<b id="prm_tpcng"></b></b>
                                            </div>
                                            <div class="plan-box mt-2 mb-2" style="display:none" id="div_UNNAMEDPRSN">
                                                <b>PA Cover for unnamed persons</b>
                                                <b style="float:right">₹<b id="prm_unnamedprsn"></b></b>
                                            </div>
                                            <div class="plan-box mt-2 mb-2" style="display:none" id="div_LLTOPAIDDRIVER">
                                                <b>Legal Liability to Paid Driver </b>
                                                <b style="float:right">₹<b id="prm_LLPaiddriver"></b></b>
                                            </div>
                                            <div class="plan-box mt-2 mb-2" style="display:none" id="div_LLEMPLOYEE">
                                                <b>Legal Liability Of Employee </b>
                                                <b style="float:right">₹<b id="prm_LLemployee"></b></b>
                                            </div>
                                            <div class="plan-box mt-2 mb-2">
                                                <span>Total TP Premium</span><span style="float:right">₹<span id="prm_NTP"></span></span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="head-sec mt-4" id="divaddonprm">
                                        <h6 class="mb-2" style="background-color:#ef3b85;color:white;height:35px;">Addons & Accessories</h6>
                                        <div id="prm_ADDON">
                                            @*<div class="" ng-show="result.PremiumBreakUpDetails.ZeroDepPremium > 0">
                                                    <label>Zero Depreciation</label>
                                                    <label>{{result.PremiumBreakUpDetails.ZeroDepPremium}}</label>
                                                </div>*@
                                        </div>
                                        <div class="plan-box mt-2 mb-2">
                                            <span>Total Addon Premium</span>
                                            <span style="float:right">₹<span id="prm_Totaladdon"></span></span>
                                        </div>
                                    </div>
                                    <div class="head-sec mt-4">
                                        <h6 class="mb-2" style="background-color:#ef3b85;color:white;height:35px;padding-top: 1%;">Final Premium <small>(inc. GST)</small></h6>
                                        <div class="plan-box mt-2 mb-2">
                                            <span>Total Net Premium</span>
                                            <span style="float:right">₹<span id="prm_Net"></span></span>
                                        </div>
                                        <div class="plan-box mt-2 mb-2">
                                            <span>GST(18%)</span>
                                            <span style="float:right">₹<span id="prm_service"></span></span>
                                        </div>

                                        <div class="plan-box mt-2 mb-2" style="background-color:#ef3b85;color:white;height:35px;">
                                            <span>Final Premium</span>
                                            <span style="float:right">₹<span id="prm_Final"></span></span>
                                        </div>
                                    </div>

                                </div>
                                <div class="tab-pane fade" id="cashless" role="tabpanel" aria-labelledby="cashless-tab">
                                    <div class="cashless">
                                        <div class="row mb-3">
                                            <div class="col-md-6">
                                                <h5>Cashless Garages near you</h5>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="form-group search-other">
                                                    <input type="text" name="text" class="form-control fullWidht search-input" placeholder="Select City" required="">
                                                </div>
                                            </div>
                                        </div>
                                        <div class="b-box">
                                            <b class="w-100">Ashok Motors</b>
                                            <div class="row">
                                                <div class="col-md-7 col-sm-7">
                                                    <p>1/108, Manraj Complex, Opp Yamuna Vihar C Block Main Wazirabad Road,Gokulpuri, New Delhi-110094</p>
                                                </div>
                                                <div class="col-md-5 col-sm-5 text-r">
                                                    <i class="fa fa-phone" aria-hidden="true"></i> <span>9599387486</span>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="b-box mt-3">
                                            <b class="w-100">Ashok Motors</b>
                                            <div class="row">
                                                <div class="col-md-7 col-sm-7">
                                                    <p>1/108, Manraj Complex, Opp Yamuna Vihar C Block Main Wazirabad Road,Gokulpuri, New Delhi-110094</p>
                                                </div>
                                                <div class="col-md-5 col-sm-5 text-r">
                                                    <i class="fa fa-phone" aria-hidden="true"></i> <span>9599387486</span>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="b-box mt-3">
                                            <b class="w-100">Ashok Motors</b>
                                            <div class="row">
                                                <div class="col-md-7 col-sm-7">
                                                    <p>1/108, Manraj Complex, Opp Yamuna Vihar C Block Main Wazirabad Road,Gokulpuri, New Delhi-110094</p>
                                                </div>
                                                <div class="col-md-5 col-sm-5 text-r">
                                                    <i class="fa fa-phone" aria-hidden="true"></i> <span>9599387486</span>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="b-box mt-3">
                                            <b class="w-100">Ashok Motors</b>
                                            <div class="row">
                                                <div class="col-md-7 col-sm-7">
                                                    <p>1/108, Manraj Complex, Opp Yamuna Vihar C Block Main Wazirabad Road,Gokulpuri, New Delhi-110094</p>
                                                </div>
                                                <div class="col-md-5 col-sm-5 text-r">
                                                    <i class="fa fa-phone" aria-hidden="true"></i> <span>9599387486</span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal modal-popup fade" id="modal-PaOwner" data-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
                <div class="modal-dialog modal-dialog-centered">
                    <div class="modal-content">
                        <div class="modal-body">
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                            <h5 class="text-center">Compulsory Personal Accident Cover</h5>
                            <h3 class="text-center" style="margin-bottom:0px; ">Are you sure you want to remove this cover?</h3>
                            <p class="text-center gry-t mb-2">This cover is mandated by IRDAI, it is compulsory for Owner-Driver to possess a PA cover of minimum Rs 15 Lacs, except in certain conditions. By not choosing this cover, you confirm that you hold an existing PA cover or you do not possess a valid driving license.</p>
                            <div>
                                <input type="button" class="btn btn-pink" id="btnparemove" value="Remove Cover" style="float:left" />
                                <input type="button" class="btn btn-pink" id="btncancel" value="Cancel" style="float:right" />
                            </div>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="~/assets/js/angular.min.js"></script>
<script src="~/assets/js/ngStorage.min.js"></script>
@*<script src="~/assets/js/date-picker.min.js"></script>*@
<script src="~/assets/waitme/waitMe.min.js"></script>
<script src="~/assets/js/angular-filter.js"></script>
@*<script src="~/assets/js/custom/policydetails.js"></script>*@

<script type="text/javascript">
    $("#btn_vehicledetails").click(function () {
        $("#model_vehicledetails").modal('show');
    })
    //setTimeout(function () {


    //    $(".inputdisabled").prop('disabled', false);
    //    $('.inputdisabled').attr('style', 'cursor:not-pointer');
    //    $('.fadeInDown ').waitMe("hide");
    //    //$('.btnprm ').waitMe("hide");
    //}, 60000);

    var CompanyList = [];
    var accessory;
    var app = angular.module("myApp", ["ngStorage", "angular.filter"]);

    app.controller("myResultCtrl", function ($scope, $http, $window, $compile, $sessionStorage, $filter) {
        $scope.IsZeroDeperation = false;
        $scope.IsConsumables = false;
        $scope.IsTyreCover = false;
        $scope.IsNCBProtection = false;
        $scope.IsEngineProtector = false;
        $scope.IsReturntoInvoice = false;
        $scope.IsLossofKey = false;
        $scope.IsLossofpersonalBelonging = false;
        $scope.IsRoadSideAssistance = false;
        $scope.IsPassengerAssistcover = false;
        $scope.IsHydrostaticLockCover = false;
        $scope.IsHospitalCashCover = false;
        $scope.IsRimProtectionCover = false;
        $scope.IsEmergencyCover = false;
        $scope.IsMedicalExpensesSelected = false;
        $scope.IsAmbulanceChargesSelected = false;
        $scope.IsLossofpersonalBelonging = false;

        $('.addonchk').click(function () {
            var html = "";
            var html1 = "";
            // var planname = "";
            var ischecked = $(this).prop('checked');
            var id = $(this).attr('addonid');
            //alert(id);
            var value = $(this).val();
            var name = $(this).attr('addonname');
            if (ischecked) {
                switch (id) {
                    case '1':
                        $scope.IsZeroDeperation = true;
                        break;
                    case '6':
                        $scope.IsRoadSideAssistance = true;
                        break;
                    case '3':
                        $scope.IsEngineProtector = true;
                        break;
                    case '7':
                        $scope.IsNCBProtection = true;
                        break;
                    case '8':
                        $scope.IsLossofKey = true;
                        break;
                    case '2':
                        $scope.IsConsumables = true;
                        break;
                        //case '7':
                        //    $scope.IsZeroDeperation = true;
                        //    break;
                    case '4':
                        $scope.IsReturntoInvoice = true;
                        break;
                    case '5':
                        $scope.IsTyreCover = true;
                        break;
                    case '11':
                        $scope.IsRimProtectionCover = true;
                        break;
                    case '10':
                        $scope.IsLossofpersonalBelonging = true;
                        break;
                    default:
                }
            }

            else {
                switch (id) {
                    case '1':
                        $scope.IsZeroDeperation = false;
                        break;
                    case '6':
                        $scope.IsRoadSideAssistance = false;
                        break;
                    case '3':
                        $scope.IsEngineProtector = false;
                        break;
                    case '7':
                        $scope.IsNCBProtection = false;
                        break;
                    case '8':
                        $scope.IsLossofKey = false;
                        break;
                    case '2':
                        $scope.IsConsumables = false;
                        break;
                        //case '7':
                        //    $scope.IsZeroDeperation = true;
                        //    break;
                    case '4':
                        $scope.IsReturntoInvoice = false;
                        break;
                    case '5':
                        $scope.IsTyreCover = false;
                        break;
                    case '11':
                        $scope.IsRimProtectionCover = false;
                        break;
                    case '10':
                        $scope.IsLossofpersonalBelonging = false;
                        break;
                    default:
                }
            }
            //CalculateAddon(ischecked, value, name);
        })

        $('.ddladdon').change(function () {
            $('#btncoverupdate').show();
        })
        //function CalculateAddon(ischecked, value, name, company) {
        //    console.log(CompanyList);
        //    for (var j = 0; j < CompanyList.length; j++) {
        //        var i = CompanyList[j];
        //        var tot = $('.prem_' + i).text();
        //        var totaladdon = parseInt($('#' + i + '_totaladdon').val());

        //        totalpremium = parseInt(tot); //parseFloat(tot.substring(2));

        //        if (ischecked) {

        //            if (value == "zerodep") {
        //                var zero = parseInt($('#div_' + i).attr('data-zerodep'));
        //                if (zero > 0) {
        //                    html = "<p style='color:green; font-size:12px;' class='mb-0 " + value + "'>" + name + "</p>";
        //                    $('#addondiv_' + i).append(html);

        //                    html1 = "<p class='" + value + "'><span id='spnaddonname'>" + name + "</span><span id='spnaddonval' style='float:right;'>₹ " + (zero) + "</span></p>";
        //                    $('#' + i + '_addonwithval').append(html1);
        //                    totaladdon = totaladdon + (zero);
        //                    totalpremium = totalpremium + (zero);
        //                }
        //            }
        //            else if (value == "engine") {
        //                var engine = parseInt($('#div_' + i).attr('data-engineprot'));
        //                if (engine > 0) {
        //                    html = "<p style='color:green; font-size:12px;' class='mb-0 " + value + "'>" + name + "</p>";
        //                    $('#addondiv_' + i).append(html);


        //                    html1 = "<p class='" + value + "'><span id='spnaddonname'>" + name + "</span><span id='spnaddonval' style='float:right;'>₹ " + (engine) + "</span></p>";
        //                    $('#' + i + '_addonwithval').append(html1);
        //                    totaladdon = totaladdon + (engine);
        //                    totalpremium = totalpremium + (engine);
        //                }
        //            }
        //            else if (value == "rim") {
        //                var rim = parseInt($('#div_' + i).attr('data-rimprot'));
        //                if (rim > 0) {
        //                    html = "<p style='color:green; font-size:12px;' class='mb-0 " + value + "'>" + name + "</p>";
        //                    $('#addondiv_' + i).append(html);

        //                    html1 = "< class='" + value + "'p><span id='spnaddonname'>" + name + "</span><span  id='spnaddonval' style='float:right;'>₹ " + rim + "</span></p>"; // this will be display in breakup add by akash one remove it
        //                    $('#' + i + '_addonwithval').append(html1);
        //                    totaladdon = totaladdon + rim;
        //                    totalpremium = totalpremium + rim;
        //                }
        //            }
        //            else if (value == "invprice") {
        //                var invoice = parseInt($('#div_' + i).attr('data-invoiceprot'));
        //                if (invoice > 0) {
        //                    html = "<p style='color:green; font-size:12px;' class='mb-0 " + value + "'>" + name + "</p>";
        //                    $('#addondiv_' + i).append(html);



        //                    html1 = "<p class='" + value + "'><span id='spnaddonname'>" + name + "</span><span  id='spnaddonval' style='float:right;'>₹ " + (invoice) + "</span></p>"; // this will be display in breakup add by akash one remove it
        //                    $('#' + i + '_addonwithval').append(html1);
        //                    totaladdon = totaladdon + (invoice);
        //                    totalpremium = totalpremium + (invoice);
        //                }
        //            }
        //            else if (value == "keylock") {
        //                var keylock = parseInt($('#div_' + i).attr('data-keylock'));
        //                if (keylock > 0) {
        //                    html = "<p style='color:green; font-size:12px;' class='mb-0 " + value + "'>" + name + "</p>";
        //                    $('#addondiv_' + i).append(html);


        //                    html1 = "<p class='" + value + "'><span id='spnaddonname'>" + name + "</span><span  id='spnaddonval' style='float:right;'>₹ " + (keylock) + "</span></p>"; // this will be display in breakup add by akash one remove it
        //                    $('#' + i + '_addonwithval').append(html1);
        //                    totaladdon = totaladdon + (keylock);
        //                    totalpremium = totalpremium + (keylock);
        //                }
        //            }
        //            else if (value == "ncbprotect") {
        //                var ncb = parseInt($('#div_' + i).attr('data-ncbprotect'));
        //                if (ncb > 0) {
        //                    html = "<p style='color:green; font-size:12px;' class='mb-0 " + value + "'>" + name + "</p>";
        //                    $('#addondiv_' + i).append(html);

        //                    html1 = "<p class='" + value + "'><span id='spnaddonname'>" + name + "</span><span  id='spnaddonval' style='float:right;'>₹ " + (ncb) + "</span></p>"; // this will be display in breakup add by akash one remove it
        //                    $('#' + i + '_addonwithval').append(html1);
        //                    totaladdon = totaladdon + (ncb);
        //                    totalpremium = totalpremium + (ncb);
        //                }
        //            }
        //            else if (value == "consumables") {
        //                var consumables = parseInt($('#div_' + i).attr('data-consumables'));
        //                if (consumables > 0) {
        //                    html = "<p style='color:green; font-size:12px;' class='mb-0 " + value + "'>" + name + "</p>";
        //                    $('#addondiv_' + i).append(html);


        //                    html1 = "<p class='" + value + "'><span id='spnaddonname'>" + name + "</span><span id='spnaddonval' style='float:right;'>₹ " + (consumables) + "</span></p>"; // this will be display in breakup add by akash one remove it
        //                    $('#' + i + '_addonwithval').append(html1);
        //                    totaladdon = totaladdon + (consumables);
        //                    totalpremium = totalpremium + (consumables);
        //                }
        //            }
        //            else if (value == "dailyallowance") {
        //                var dailyallowance = parseInt($('#div_' + i).attr('data-dailyallowance'));
        //                if (dailyallowance > 0) {
        //                    html = "<p style='color:green; font-size:12px;' class='mb-0 " + value + "'>" + name + "</p>";
        //                    $('#addondiv_' + i).append(html);



        //                    html1 = "<p class='" + value + "'><span id='spnaddonname'>" + name + "</span><span id='spnaddonval' style='float:right;'>₹ " + (dailyallowance) + "</span></p>"; // this will be display in breakup add by akash one remove it
        //                    $('#' + i + '_addonwithval').append(html1);
        //                    totaladdon = totaladdon + (dailyallowance);
        //                    totalpremium = totalpremium + (dailyallowance);
        //                }
        //            }
        //            else if (value == "tyre") {
        //                var tyre = parseInt($('#div_' + i).attr('data-tyre'));
        //                if (tyre > 0) {
        //                    html = "<p style='color:green; font-size:12px;' class='mb-0 " + value + "'>" + name + "</p>";
        //                    $('#addondiv_' + i).append(html);



        //                    html1 = "<p class='" + value + "'><span id='spnaddonname'>" + name + "</span><span id='spnaddonval' style='float:right;'>₹ " + (tyre) + "</span></p>"; // this will be display in breakup add by akash one remove it
        //                    $('#' + i + '_addonwithval').append(html1);
        //                    totaladdon = totaladdon + (tyre);
        //                    totalpremium = totalpremium + (tyre);
        //                }
        //            }
        //            else if (value == "personalloss") {
        //                var loss = parseInt($('#div_' + i).attr('data-personalloss'));
        //                if (loss > 0) {
        //                    html = "<p style='color:green; font-size:12px;' class='mb-0 " + value + "'>" + name + "</p>";
        //                    $('#addondiv_' + i).append(html);

        //                    html1 = "<p class='" + value + "'><span id='spnaddonname'>" + name + "</span><span id='spnaddonval' style='float:right;'>₹ " + (loss) + "</span></p>"; // this will be display in breakup add by akash one remove it
        //                    $('#' + i + '_addonwithval').append(html1);
        //                    totaladdon = totaladdon + (loss);
        //                    totalpremium = totalpremium + (loss);
        //                }
        //            }
        //            else if (value == "roadside") {
        //                var roadside = parseInt($('#div_' + i).attr('data-roadside'));
        //                if (roadside > 0) {
        //                    html = "<p style='color:green; font-size:12px;' class='mb-0 " + value + "'>" + name + "</p>";
        //                    $('#addondiv_' + i).append(html);


        //                    html1 = "<p class='" + value + "'><span id='spnaddonname'>" + name + "</span><span id='spnaddonval' style='float:right;'>₹ " + (roadside) + "</span></p>"; // this will be display in breakup add by akash one remove it
        //                    $('#' + i + '_addonwithval').append(html1);
        //                    totaladdon = totaladdon + (roadside);
        //                    totalpremium = totalpremium + (roadside);
        //                }
        //            }
        //        }
        //        else {
        //            if (value == "zerodep") {
        //                var zero = parseInt($('#div_' + i).attr('data-zerodep'));
        //                if (zero > 0) {
        //                    totaladdon = totaladdon - (zero);
        //                    totalpremium = totalpremium - (zero);
        //                }
        //            }
        //            else if (value == "engine") {
        //                var engine = parseInt($('#div_' + i).attr('data-engineprot'));
        //                if (engine > 0) {
        //                    totaladdon = totaladdon - (engine);
        //                    totalpremium = totalpremium - (engine);
        //                }
        //            }
        //            else if (value == "rim") {
        //                var rim = parseInt($('#div_' + i).attr('data-rimprot'));
        //                if (rim > 0) {
        //                    totaladdon = totaladdon - (rim);
        //                    totalpremium = totalpremium - (rim);
        //                }
        //            }
        //            else if (value == "invprice") {
        //                var invoice = parseInt($('#div_' + i).attr('data-invoiceprot'));
        //                if (invoice > 0) {
        //                    totaladdon = totaladdon - (invoice);
        //                    totalpremium = totalpremium - (invoice);
        //                }
        //            }
        //            else if (value == "keylock") {
        //                var keynlock = parseInt($('#div_' + i).attr('data-keylock'));
        //                if (keynlock > 0) {
        //                    totaladdon = totaladdon - (keynlock);
        //                    totalpremium = totalpremium - (keynlock);
        //                }
        //            }
        //            else if (value == "ncbprotect") {
        //                var ncb = parseInt($('#div_' + i).attr('data-ncbprotect'));
        //                if (ncb > 0) {
        //                    totaladdon = totaladdon - (ncb);
        //                    totalpremium = totalpremium - (ncb);
        //                }
        //            }
        //            else if (value == "consumables") {
        //                var consumable = parseInt($('#div_' + i).attr('data-consumables'));
        //                if (consumable > 0) {
        //                    totaladdon = totaladdon - (consumable);
        //                    totalpremium = totalpremium - (consumable);
        //                }
        //            }
        //            else if (value == "dailyallowance") {
        //                var dailyallowance = parseInt($('#div_' + i).attr('data-dailyallowance'));
        //                if (dailyallowance > 0) {
        //                    totaladdon = totaladdon - (dailyallowance);
        //                    totalpremium = totalpremium - (dailyallowance);
        //                }
        //            }
        //            else if (value == "tyre") {
        //                var tyre = parseInt($('#div_' + i).attr('data-tyre'));
        //                if (tyre > 0) {
        //                    totaladdon = totaladdon - (tyre);
        //                    totalpremium = totalpremium - (tyre);
        //                }
        //            }
        //            else if (value == "personalloss") {
        //                var loss = parseInt($('#div_' + i).attr('data-personalloss'));
        //                if (loss > 0) {
        //                    totaladdon = totaladdon - (loss);
        //                    totalpremium = totalpremium - (loss);
        //                }
        //            }
        //            else if (value == "roadside") {
        //                var roadside = parseInt($('#div_' + i).attr('data-roadside'));
        //                if (roadside > 0) {
        //                    totaladdon = totaladdon - (roadside);
        //                    totalpremium = totalpremium - (roadside);
        //                }
        //            }
        //            $("." + value).remove();

        //        }
        //        $('.prem_' + i).text(totalpremium);

        //        $('#' + i + '_totaladdon').val(totaladdon);
        //    }
        //}

        var slider = document.getElementById("myRange");
        slider.oninput = function () {
            $("#txtIDV").val(this.value);
            $scope.txtIDV = this.value;
            output.val(this.value);
        }



        $scope.closemodal = function () {
            $(".dropdown-menu").removeClass("show")
            $('#model_vehicledetails').modal('hide');
        }


        //var sharepdf = [];
        $scope.sharepdf = function () {

            $('#sharePDF').waitMe({
                effect: 'bouncePulse',
                maxSize: '10',
                color: '#ef3b85',
                waitTime: '-1',
                textPos: 'horizontal',

                source: '',


            });
            var spolicyType = "";
            if ($scope.IsODOnly == true) {
                spolicyType = "OD Only";
            }
            else if ($scope.IsThirdPartyOnly == true) {
                spolicyType = "TP Only";

            }
            else {
                spolicyType = "Comprehensive";

            }
            var sharepdf = [];
            debugger;
            $('.aaa:checked').map(function () {
                var data = {};
                var Company = $(this).attr("value");
                var selectedaddons = $("#" + Company + "_addonwithval").find('p').map(function () {
                    //return this.textContent.replace('₹ ', ':');
                    let obj = {};
                    obj.AddonName = $(this).find("#spnaddonname").text();
                    obj.AddonVal = $(this).find("#spnaddonval").text().replace('₹ ', '');

                    return obj;
                }).get();
                //}).get().join(', ');


                var QuotationRes = $filter('filter')($scope.QuotationRes, { CompanyName: Company })[0];
                var prm = $('.prem_' + Company + '').text();
                console.log(QuotationRes);
                data.TotalDiscount = QuotationRes.PremiumBreakUpDetails.NCBDiscount;
                data.TotalAddon = QuotationRes.PremiumBreakUpDetails.NetAddonPremium;
                data.companyname = Company;
                data.gst = QuotationRes.PremiumBreakUpDetails.ServiceTax;
                data.idv = QuotationRes.IDV;
                data.netprm = prm;
                //data.finalprm = Math.round(parseFloat(prm) + (parseFloat(prm * 0.18)));
                data.finalprm = Math.round(parseFloat(prm) + (parseFloat(data.gst)));
                data.model = $scope.FirstQuote.ModelName;
                data.VariantName = $scope.FirstQuote.VariantName;
                data.ManufactureYear = $scope.FirstQuote.ManufactureYear;
                data.Fuel = $scope.FirstQuote.Fuel;
                data.QuoteNo = $scope.FirstQuote.EnqId;
                data.Regno = $scope.FirstQuote.RegistrationNo;

                data.PolicyType = $scope.PolicyType + " - " + spolicyType;
                if ($scope.PolicyType == "New") {
                    data.NCBRate = 0;
                }
                else if ($scope.PrvPolicyType == "TP") {
                    data.NCBRate = 0;
                }
                else if ($scope.IsThirdPartyOnly) {
                    data.NCBRate = 0;
                }
                else {
                    data.NCBRate = $scope.CurrentNcb;
                }
                //addons.selectedaddons = selectedaddons;
                data.BasicODPremium = QuotationRes.PremiumBreakUpDetails.BasicODPremium;

                data.EleAccPremium = QuotationRes.PremiumBreakUpDetails.ElecAccessoriesPremium;
                data.NonEleAccPremium = QuotationRes.PremiumBreakUpDetails.NonElecAccessoriesPremium;
                data.CngLpgKitPremium = QuotationRes.PremiumBreakUpDetails.CNGLPGKitPremium;

                data.BasicThirdPartyLiability = QuotationRes.PremiumBreakUpDetails.BasicThirdPartyLiability;

                data.PACoverToOwnDriver = 0;
                var ischecked = $("#chkowndriver").prop('checked');
                if (ischecked == true) {
                    data.PACoverToOwnDriver = QuotationRes.PremiumBreakUpDetails.PACoverToOwnDriver;
                }

                data.LLToPaidEmployee = 0;
                var ischecked = $("#chkllemployee").prop('checked');
                if (ischecked == true) {
                    data.LLToPaidEmployee = QuotationRes.PremiumBreakUpDetails.LLToPaidEmployee;
                }

                data.LLToPaidDriver = 0;
                var ischecked = $("#chkllpaiddriver").prop('checked');
                if (ischecked == true) {
                    data.LLToPaidDriver = QuotationRes.PremiumBreakUpDetails.LLToPaidDriver;
                }

                data.PAToPaidDriver = 0;
                var ischecked = $("#chkpaiddriver").prop('checked');
                if (ischecked == true) {
                    data.PAToPaidDriver = QuotationRes.PremiumBreakUpDetails.PAToPaidDriver;
                }

                data.PACoverToUnNamedPerson = 0;
                var ischecked = $("#chkunnamed").prop('checked');
                if (ischecked == true) {
                    data.PACoverToUnNamedPerson = QuotationRes.PremiumBreakUpDetails.PACoverToUnNamedPerson;
                }

                data.TPCNGLPGPremium = QuotationRes.PremiumBreakUpDetails.TPCNGLPGPremium;

                data.lstAddonPremiums = selectedaddons;
                data.PospName = '@AndApp.Utilities.Common.MySession.UserDetail.username';
                data.PospCode = '@AndApp.Utilities.Common.MySession.UserDetail.pospcode';
                data.PospMobile = '@AndApp.Utilities.Common.MySession.UserDetail.mobileno';
                data.PospEmail = '@AndApp.Utilities.Common.MySession.UserDetail.emailid';
                sharepdf.push(data);
            });

            console.log(sharepdf);

            $http({
                url: '/PrivateCar/sharepdf',
                method: "POST",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: JSON.stringify(sharepdf)
                //}).then(function (response) {
                //    alert('Done');
                //});
            }).then(function (data) {

                //alert(data.data.FileName);

                //get the file name for download
                if (data.data.FileName != "") {
                    $('#sharePDF ').waitMe("hide");
                    //use window.location.href for redirect to download action for download the file
                    window.location.href = '/PrivateCar/Download?file=' + data.data.FileName;
                }

            });

        }




        $scope.GetProposal = function (Company) {
            debugger
            if (Company == "TATA") {
                if ($scope.PolicyType == "Rollover") {
                    if ($scope.IsZeroDeperation == true || $scope.IsEngineProtector == true || $scope.IsTyreCover == true || $scope.IsReturntoInvoice == true) {

                        if (confirm('Is the Opted Addon available in the Previous Insurance Company?')) {
                            callproposal(Company)
                            
                        } else {
                           
                           
                        }
                    }
                    else {
                        callproposal(Company);
                    }

                }
                else {
                    callproposal(Company);
                }

            }
            else {
                callproposal(Company);
            }

          
            function callproposal(Company) {
                $scope.disabledFlag = $scope.DontKnowPreviousInsurer ? false : true;
                if ($sessionStorage.isbrekin == true) {
                    $scope.disabledFlag = false;
                }
                SetOdTpValues('hide', Company);

                if ($scope.disabledFlag) {
                    var selectedaddons = $("#addondiv_" + Company + "").find('p').map(function () {
                        return this.textContent;
                    }).get().join(',');

                    var LLempcover = $("#chkllemployee").prop('checked');
                    var paowndriver = $("#chkowndriver").prop('checked');

                    var QuotationRes = $filter('filter')($scope.QuotationRes, { CompanyName: Company })[0];
                    delete $sessionStorage.ProposalData;
                    var ProposalData = {};
                    var netprm = $('.prem_' + Company).text();
                    //var gst = (parseFloat(netprm) * parseFloat(0.18)).toFixed(0);
                    var gst = parseFloat($("#div_" + Company).attr('data-gst'));
                    var finalprm = parseFloat(netprm) + parseFloat(gst);
                    ProposalData.selectedcovers = LLempcover;
                    ProposalData.paowndriver = paowndriver;
                    ProposalData.selectedaddons = selectedaddons;
                    ProposalData.comresponse = QuotationRes;

                    ProposalData.netaddon = $("#prm_Totaladdon").text();
                    ProposalData.ncbdisc = $("#prm_NCB").text();
                    ProposalData.nettp = $("#prm_NTP").text();
                    ProposalData.netod = $("#prm_NOD").text();


                    ProposalData.netprm = netprm;
                    ProposalData.gst = parseFloat(gst).toFixed(0);
                    ProposalData.finalprm = Math.round(finalprm);
                    $sessionStorage.ProposalData = angular.copy(ProposalData);
                    setTimeout(function () {
                        $window.location.href = '/Motor/PrivateCar/Proposal?CompanyName=' + Company;
                    }, 500);
                }
                else {
                    alert("This is Break-in Case, Inspection of vehicle is required");
                }

            }

        };



        $("#Edit_Info_Btn").on('click', function () {
            $("#EditAccount").show()
        })
        var selectedmodelid = $sessionStorage.modelid
        var selectedvariantid = $sessionStorage.variantid

        $scope.QuoteReqModel = [];
        $scope.QuotationRes = [];
        $scope.QuotationError = [];
        $scope.QualifyCompanyResData = $sessionStorage.QualifyCompanyResData;
        $scope.FirstQuote = !angular.isUndefined($scope.FirstQuote) ? (angular.copy($scope.FirstQuote)) : $sessionStorage.FirstQuote;
        $scope.IsGetQuoteByEnquiry = $sessionStorage.GetQByEnquiry;
        $scope.IsGetQuoteByEnquiryNo = !angular.isUndefined($sessionStorage.GetQuoteByEnquiry) ? $sessionStorage.GetQuoteByEnquiry : false;
        $scope.PolicyType = !angular.isUndefined($sessionStorage.FirstQuote) ? (angular.copy($sessionStorage.FirstQuote.PolicyType)) : $scope.PolicyType;
        //$scope.QuotationReq = !angular.isUndefined($sessionStorage.PCQuotation) ? (angular.copy($sessionStorage.PCQuotation)) : $scope.QuotationReq;
        //$scope.QuotationRes = !angular.isUndefined($sessionStorage.PCQuotationResPonse) ? (angular.copy($sessionStorage.PCQuotationResPonse)) : $scope.QuotationRes;
        //$scope.QuotationError=angular.copy($sessionStorage.QuotationError);
        //$scope.idx = $scope.QuotationReq.length - 2;
        $scope.IsNew = $scope.PolicyType === "New" ? true : false;
        //$scope.chkClaimed = !angular.isUndefined($scope.chkClaimed) ? $scope.chkClaimed : (angular.copy($sessionStorage.FirstQuote.chkClaimed));

        if (angular.isUndefined($sessionStorage.FirstQuote)) {
            $scope.chkClaimed = false;
        }
        else {
            if (angular.isUndefined($sessionStorage.FirstQuote.chkClaimed)) {
                $scope.chkClaimed = false;
            }
            else {
                $scope.chkClaimed = !angular.isUndefined($scope.chkClaimed) ? $scope.chkClaimed : (angular.copy($sessionStorage.FirstQuote.chkClaimed));
            }
        }
        //$scope.CurrentNcb = $scope.QuotationReq[$scope.idx].CurrentNcb;
        $scope.ddlNCB = !angular.isUndefined($scope.ddlNCB) ? $scope.ddlNCB : (angular.copy($sessionStorage.FirstQuote.ddlNCB));
        //if ($scope.IsGetQuoteByEnquiry) {
        //   $scope.txtIDV = $scope.QuotationReq[$scope.idx].IDV;
        //}
        $scope.DontKnowPreviousInsurer = !angular.isUndefined($scope.DontKnowPreviousInsurer) ? $scope.DontKnowPreviousInsurer : (angular.copy($sessionStorage.FirstQuote.DontKnowPreviousInsurer));
        $scope.IsThirdPartyOnly = !angular.isUndefined($scope.IsThirdPartyOnly) ? $scope.IsThirdPartyOnly : (angular.copy($sessionStorage.FirstQuote.IsThirdPartyOnly));
        $scope.IsODOnly = !angular.isUndefined($scope.IsODOnly) ? $scope.IsODOnly : (angular.copy($sessionStorage.FirstQuote.IsODOnly));
        $scope.prvexpdate = !angular.isUndefined($scope.prvexpdate) ? $scope.prvexpdate : (angular.copy($sessionStorage.FirstQuote.prvexpdate));
        $scope.PrvPolicyType = !angular.isUndefined($scope.PrvPolicyType) ? $scope.PrvPolicyType : (angular.copy($sessionStorage.FirstQuote.PrvPolicyType));
        $scope.PrvPolicyInsurereName = !angular.isUndefined($scope.PrvPolicyInsurereName) ? $scope.PrvPolicyInsurereName : (angular.copy($sessionStorage.FirstQuote.prvinsurername));
        $scope.PrvPolicyInsurereId = !angular.isUndefined($scope.PrvPolicyInsurereId) ? $scope.PrvPolicyInsurereId : (angular.copy($sessionStorage.FirstQuote.prvinsurerid));
        $scope.tpprvexpdate = !angular.isUndefined($scope.tpprvexpdate) ? $scope.tpprvexpdate : (angular.copy($sessionStorage.FirstQuote.prvtpexpdate));
        $scope.TPPrvPolicyInsurereName = !angular.isUndefined($scope.TPPrvPolicyInsurereName) ? $scope.TPPrvPolicyInsurereName : (angular.copy($sessionStorage.FirstQuote.tpprvinsurername));
        $scope.TPPrvPolicyInsurereId = !angular.isUndefined($scope.TPPrvPolicyInsurereId) ? $scope.TPPrvPolicyInsurereId : (angular.copy($sessionStorage.FirstQuote.tpprvinsurerid));

        $scope.CurrentNcb = !angular.isUndefined($scope.CurrentNcb) ? $scope.CurrentNcb : (angular.copy($sessionStorage.FirstQuote.CurrentNcb));

        $scope.RegistrationNumber = !angular.isUndefined($scope.RegistrationNumber) ? $scope.RegistrationNumber : (angular.copy($sessionStorage.FirstQuote.RegistrationNo));
        $scope.companylistName = [];
        $scope.CustomIDV = [];


        $scope.PrvTp = false;


        if ($scope.PrvPolicyType == "TP") {
            $scope.PrvTp = true;
        }

        $scope.NCBHide = false;
        if ($scope.PolicyType == "New") {
            $scope.NCBHide = true;
        }
        else if ($scope.PrvPolicyType == "TP") {
            $scope.NCBHide = true;
        }
        else if ($scope.IsThirdPartyOnly) {
            $scope.NCBHide = true;
        }
        //var FirstQuote = {};
        if ($scope.PolicyType == "New") {

            $(".regdate").datepicker("destroy");
            $(".manufdate").datepicker("destroy");

            var start = new Date();
            start.setDate(start.getDate() - 30)
            var end = new Date();

            $('.regdate').datepicker({
                changeMonth: true,
                changeYear: true,

                dateFormat: 'dd-mm-yy',
                minDate: start,
                maxDate: end,
                yearRange: start.getFullYear() + ':' + end.getFullYear(),

                beforeShow: function (input, inst) {
                    $(document).off('focusin.bs.modal');
                }
            });

            $('.manufdate').datepicker({
                changeMonth: true,
                changeYear: true,
                showButtonPanel: true,
                yearRange: '-1:+0',
                dateFormat: 'MM yy',

                beforeShow: function (input, inst) {
                    $(document).off('focusin.bs.modal');
                },
                onClose: function (dateText, inst) {
                    var month = $("#ui-datepicker-div .ui-datepicker-month :selected").val();
                    var year = $("#ui-datepicker-div .ui-datepicker-year :selected").val();
                    $(this).datepicker('setDate', new Date(year, month, 1));
                }
            }).focus(function () {
                $(".ui-datepicker-calendar").hide();
            });
        }
        else {
            $(".regdate").datepicker("destroy");
            $(".manufdate").datepicker("destroy");
            var start = new Date();
            start.setFullYear(start.getFullYear() - 15)
            var end = new Date();

            $('.regdate').datepicker({
                changeMonth: true,
                changeYear: true,
                dateFormat: 'dd-mm-yy',
                minDate: start,
                maxDate: end,
                yearRange: start.getFullYear() + ':' + end.getFullYear(),
                //onSelect: function (selected) {

                //    $('.manufdate').datepicker('option', 'minDate', start);
                //    $(".manufdate").datepicker("option", "maxDate", selected)
                //},
                beforeShow: function (input, inst) {
                    $(document).off('focusin.bs.modal');
                }
            });
            $('.manufdate').datepicker({
                changeMonth: true,
                changeYear: true,
                showButtonPanel: true,
                yearRange: '-15:-1',
                dateFormat: 'MM yy',

                beforeShow: function (input, inst) {
                    $(document).off('focusin.bs.modal');
                },
                onClose: function (dateText, inst) {
                    var month = $("#ui-datepicker-div .ui-datepicker-month :selected").val();
                    var year = $("#ui-datepicker-div .ui-datepicker-year :selected").val();
                    $(this).datepicker('setDate', new Date(year, month, 1));
                }
            }).focus(function () {
                $(".ui-datepicker-calendar").hide();
            });
        }

        if ($scope.FirstQuote.Fuel == "Diesel") {

            $scope.ExternalCNG = false;
        } else {
            $scope.ExternalCNG = true;
        }

        if ($scope.IsThirdPartyOnly == true) {
            $scope.idvmodel = false;
            $scope.addonsmodel = false;
            $scope.Electrical = false;
            $scope.NonElectrical = false;
            $scope.AdditionalCovers = true;


        }
        else if ($scope.IsODOnly == true) {
            $scope.idvmodel = true;
            $scope.addonsmodel = true;
            $scope.Electrical = true;
            $scope.NonElectrical = true;
            $scope.AdditionalCovers = false;
        }
        else {
            $scope.idvmodel = true;
            $scope.addonsmodel = true;
            $scope.Electrical = true;
            $scope.NonElectrical = true;
            $scope.AdditionalCovers = true;
        }

        var d = new Date();
        var a = d.setFullYear($scope.FirstQuote.ManufactureYear);
        if (angular.isUndefined($sessionStorage.RegistrationDate) || $sessionStorage.RegistrationDate == null) {
            $scope.RegistrationDate = new Date(a);


        }
        else {
            $scope.RegistrationDate = $sessionStorage.RegistrationDate;

        }
        //$scope.RegistrationDate = !angular.isUndefined($sessionStorage.RegistrationDate) ? $sessionStorage.RegistrationDate : new Date(a)

        //$filter('date')(a, 'dd-MM-yyyy');
        var firstDay = new Date(d.getFullYear(), d.getMonth(), 1);
        //var a = d.setFullYear($scope.FirstQuote.ManufactureYear);
        if (angular.isUndefined($sessionStorage.ManufaturingDate) || $sessionStorage.ManufaturingDate == null) {
            $scope.ManufaturingDate = firstDay;
        }
        else {
            $scope.ManufaturingDate = $sessionStorage.ManufaturingDate;
        }
        //$scope.ManufaturingDate = !angular.isUndefined($sessionStorage.ManufaturingDate) ? $sessionStorage.ManufaturingDate : new Date(firstDay)
        //$filter('date')(firstDay, "dd-MM-yyyy");
        //alert($scope.RegistrationDate);
        var r_year = new Date($scope.RegistrationDate).getFullYear();
        var r_day = String(new Date($scope.RegistrationDate).getDate()).padStart(2, '0');
        var r_month = String(new Date($scope.RegistrationDate).getMonth() + 1).padStart(2, '0');
        var regdate = r_day + "-" + r_month + "-" + r_year
        $scope.regdate = regdate;
        $('#regdate').val(regdate);
        var m_year = new Date($scope.ManufaturingDate).getFullYear();
        var m_day = String(new Date($scope.ManufaturingDate).getDate()).padStart(2, '0');
        var m_month = String(new Date($scope.ManufaturingDate).getMonth() + 1).padStart(2, '0');
        var manufacturingmonth = m_day + "-" + m_month + "-" + m_year
        $scope.manufdate = manufacturingmonth;
        $('#manufacturingmonth').val(manufacturingmonth);


        var RegistrationDate = "";
        var ManufaturingDate = "";
        $scope.regdate;
        $scope.manufdate;

        if (!angular.isUndefined($scope.FirstQuote.ExistingPolicyExpireStatus)) {
            if ($scope.FirstQuote.ExistingPolicyExpireStatus == "60-90Days") {
                $scope.disabledFlag = false;
            }
        }

        $scope.$watch("regdate", function (newValue, oldValue) {

            if (newValue != oldValue) {
                $('#manufacturingmonth').val();
                $scope.manufdate = "";
            }

            const dateTime = newValue;
            const parts = dateTime.split(/[- :]/);
            const wanted_regdate = `${parts[1]}/${parts[0]}/${parts[2]}`;
            RegistrationDate = wanted_regdate.toString();


        });

        $scope.$watch("manufdate", function (newValue, oldValue) {

            const dateTime = newValue;
            const parts = dateTime.split(/[- :]/);
            const wanted_manufdate = `${parts[1]}/${parts[0]}/${parts[2]}`;
            ManufaturingDate = wanted_manufdate.toString();

        });

        $scope.clearaddons = function () {

            $('.addonchk:checked').map(function () {

                $(this).removeAttr('checked');
                $('input[name="addons"').removeAttr('checked');
                var value = $(this).attr("value");
                var name = $(this).attr('addonname');

                $scope.IsZeroDeperation = false;
                $scope.IsConsumables = false;
                $scope.IsTyreCover = false;
                $scope.IsNCBProtection = false;
                $scope.IsEngineProtector = false;
                $scope.IsReturntoInvoice = false;
                $scope.IsLossofKey = false;
                $scope.IsLossofpersonalBelonging = false;
                $scope.IsRoadSideAssistance = false;
                $scope.IsPassengerAssistcover = false;
                $scope.IsHydrostaticLockCover = false;
                $scope.IsHospitalCashCover = false;
                $scope.IsRimProtectionCover = false;
                $scope.IsEmergencyCover = false;
                $scope.IsMedicalExpensesSelected = false;
                $scope.IsAmbulanceChargesSelected = false;
                $scope.IsLossofpersonalBelonging = false;
                //CalculateAddon(false, value, name);

            });


        }
         
        $scope.changeQuote = function () {
            debugger

            var rmv_coverage = QuoteModel.CoverageDetails;
            var rmv_accessorylist = $sessionStorage.selectedaccessory;
            if (rmv_accessorylist != undefined) {

           
            for (var i = 0; i < rmv_accessorylist.length; i++) {
                if (rmv_accessorylist[i] == "elec") {
                    $("#div_elec").hide();
                    $('#chkelec').prop('checked', false);
                    $('#txt_elec').val("");
                    rmv_coverage.IsElectricalAccessories = false;
                    rmv_coverage.SIElectricalAccessories = 0;
                }
                else if (rmv_accessorylist[i] == "nonelec") {
                    $("#div_nonelec").hide();
                    $('#chknonelec').prop('checked', false);
                    $('#txt_nonelec').val("");
                    rmv_coverage.IsNonElectricalAccessories = false;
                    rmv_coverage.SINonElectricalAccessories = 0;
                }
                else if (rmv_accessorylist[i] == "bifuel") {
                    $("#div_bifuel").hide();
                    $('#chkbifuel').prop('checked', false);
                    $('#txt_bifuel').val("");
                    rmv_coverage.IsBiFuelKit = false;
                    rmv_coverage.BiFuelKitAmount = 0;
                }
                else if (rmv_accessorylist[i] == "paiddriver") {
                    $("#div_paiddriver").hide();
                    $('#chkpaiddriver').prop('checked', false);
                    $('#ddl_paiddriver').val("");
                    rmv_coverage.IsPACoverPaidDriver = false;
                    rmv_coverage.PACoverPaidDriverAmount = 0;
                }
                else if (rmv_accessorylist[i] == "unnamed") {
                    $("#div_unnamed").hide();
                    $("#chkunnamed").prop('checked', false);
                    $('#ddl_unnamed').val("");
                    rmv_coverage.IsPACoverUnnamedPerson = false;
                    rmv_coverage.PACoverUnnamedPersonAmount = 0;

                }
                else if (rmv_accessorylist[i] == "llpaiddriver") {
                    $("#div_llpaiddriver").hide();
                    $("#chkllpaiddriver").prop('checked', false);
                    $('#ddl_llpaiddriver').val("");
                    rmv_coverage.IsLegalLiablityPaidDriver = false;
                    rmv_coverage.NoOfLLPaidDriver = 0;

                }
                else if (rmv_accessorylist[i] == "llemployee") {
                    $("#chkllemployee").prop('checked', false);
                    rmv_coverage.IsEmployeeLiability = false;
                }
                else if ($scope.PolicyType !== "New") {
                    if (rmv_accessorylist[i] == "owndriver") {
                        $("#chkowndriver").prop('checked', false);
                        rmv_coverage.IsPACoverForOwnerDriver = false;
                    }
                }
            }
            QuoteModel.CoverageDetails = rmv_coverage;
            }

            $scope.QuoteReModel = [];
            var tempCompanyList = CompanyList;
            CompanyList = [];
            var selectedManufacuringyear;
            var selectedManufacuringmonth;

            if ($("#manufacturingmonth").val() == "") {
                $("#v_manufdate").html("Please Select Manufacturing year.");
                return false;
            }

            if ($("#manufacturingmonth").val().includes("-")) {
                var manufaDate = $("#manufacturingmonth").val().split('-');
                $scope.ManufaturingDate = manufaDate[1] + "/" + manufaDate[0] + "/" + manufaDate[2];
                ManufaturingDate = manufaDate[1] + "/" + manufaDate[0] + "/" + manufaDate[2];
                selectedManufacuringmonth = manufaDate[1];
                selectedManufacuringyear = manufaDate[2];
            }
            else {
                var striii = $("#manufacturingmonth").val().split(' ');
                month1 = striii[0].toLowerCase();
                var months = ["january", "february", "march", "april", "may", "june", "july", "august", "september", "october", "november", "december"];
                month1 = months.indexOf(month1) + 1;
                selectedManufacuringmonth = month1;
                $scope.ManufaturingDate = month1 + "/" + "10/" + striii[1];
                ManufaturingDate = month1 + "/" + "10/" + striii[1];
                selectedManufacuringyear = striii[1];
            }

            var UpdatedRegDate = $("#regdate").val().split('-');


            if (new Date(UpdatedRegDate[1] + "/" + UpdatedRegDate[0] + "/" + UpdatedRegDate[2]) < new Date("09-01-2018") && QuoteModel.IsODOnly == true) {
                alert("Only Od is not available before September 2018");
                return false;
            }
            //if ($scope.manufdate == "") {
            //    $("#v_manufdate").html("Please Select Manufacturing Date");
            //    return false;
            //}
            if (selectedManufacuringyear > UpdatedRegDate[2]) {
                $("#v_manufdate").html("Please Select valid Manufacturing Year.");
                return false;
            }
            else if (selectedManufacuringmonth > UpdatedRegDate[1] && selectedManufacuringyear == UpdatedRegDate[2]) {
                $("#v_manufdate").html("Please Select valid Manufacturing Month.");
                return false;
            }
            else {
                $("#v_manufdate").html("");
            }
            $('#model_vehicledetails').modal('hide');

            $(".dropdown-menu").removeClass("show")
            $(".inputdisabled").prop('disabled', true);
            $('.inputdisabled').attr('style', 'cursor:not-allowed');
            var regidate = new Date($scope.regdate);
            var manudate = new Date($scope.manufdate);
            $scope.QuotationRes = [];
            $scope.QuoteReqModel = [];
            $scope.QuotationError = [];
            //$sessionStorage.RegistrationDate = new Date(RegistrationDate);
            ////$sessionStorage.ManufaturingDate =manudate;
            //$sessionStorage.ManufaturingDate = new Date(ManufaturingDate);

            var regDate1 = UpdatedRegDate[1] + "/" + UpdatedRegDate[0] + "/" + UpdatedRegDate[2];
            $scope.RegistrationDate = new Date(regDate1);
            RegistrationDate = new Date(regDate1);
            $sessionStorage.RegistrationDate = new Date(regDate1);

            $scope.FirstQuote.ManufactureYear = selectedManufacuringyear;
            $sessionStorage.ManufaturingDate = new Date(ManufaturingDate);
            var Fuel = $scope.fueltype.fueltype;
            $scope.FirstQuote.Fuel = Fuel;
            //FirstQuote.RTOId
            var VariantName = $filter('filter')($scope.variantlist, { variantid: $scope.variant.variantid })[0];
            $scope.FirstQuote.VariantName = VariantName.variantname;
            $scope.variant = { variantid: selectedvariantid };
            ////////////////////////
            $scope.variant = VariantName;
            var selectedvariantid = $scope.variant.variantid;
            ////////////////////////////
            $sessionStorage.variantid = $scope.variant.variantid;
                                


            //alert($scope.variant.variantid);
            var objQalifyCom = {
                "IsBreakin": 1,
                "VariantId": 12,
                "RtoId": 205
            };
            $http({
                url: '/PrivateCar/QualifyCom',
                method: "POST",
                data: JSON.stringify(objQalifyCom)
            }).then(function (response) {
                if (!angular.isUndefined(response && response.data)) {
                    $scope.QualifyCompanyResData = response.data.data;
                    $scope.ProgressTotal = $scope.QualifyCompanyResData.length;
                    $scope.ProgressCount = 0;
                    // $sessionStorage.FirstQuote = angular.copy(FirstQuote);
                    $sessionStorage.QualifyCompanyResData = $scope.QualifyCompanyResData;
                    angular.forEach($scope.QualifyCompanyResData, function (companylist) {
                        QuoteModel.PolicyType = $scope.PolicyType;
                        if (QuoteModel.PolicyType === "New") {
                            QuoteModel.PreviousPolicyDetails = {};
                        }
                        else {
                            QuoteModel.PreviousPolicyDetails.IsPreviousInsuranceClaimed = $scope.chkClaimed;
                            QuoteModel.PreviousPolicyDetails.PreviousNcbPercentage = $scope.ddlNCB;
                        }
                        if (QuoteModel.IsThirdPartyOnly) {
                            QuoteModel.PreviousTPPolicyDetails = {};
                        }

                        QuoteModel.IsOwnerChanged = $scope.chkVehicleOwnerChange;
                        //QuoteModel.CurrentNcb = $scope.CurrentNcb;
                        QuoteModel.CompanyName = companylist.comname;
                        QuoteModel.VehicleDetails.VariantId = $sessionStorage.variantid;

                        QuoteModel.VehicleDetails.RtoId = $scope.FirstQuote.RTOId;
                        QuoteModel.VehicleDetails.RtoZone = "A";
                        QuoteModel.VehicleDetails.RegistrationNumber = $scope.RegistrationNumber;
                        //QuoteModel.VehicleDetails.PurchaseDate = "22 Mar 2021";
                        QuoteModel.VehicleDetails.ManufaturingDate = new Date(ManufaturingDate);
                        QuoteModel.VehicleDetails.RegistrationDate = new Date(RegistrationDate);
                        QuoteModel.VehicleDetails.MakeName = companylist.makename;
                        QuoteModel.VehicleDetails.ModelName = companylist.modelname;
                        QuoteModel.VehicleDetails.VariantName = companylist.variantname;
                        QuoteModel.VehicleDetails.MakeCode = companylist.makecode;
                        QuoteModel.VehicleDetails.ModelCode = companylist.modelcode;
                        QuoteModel.VehicleDetails.VariantCode = companylist.variantcode;
                        QuoteModel.VehicleDetails.CC = companylist.cc;
                        QuoteModel.VehicleDetails.SC = companylist.sc;
                        QuoteModel.VehicleDetails.ExShowroomPrice = "0";
                        QuoteModel.VehicleDetails.Segment = companylist.segment;
                        QuoteModel.VehicleDetails.Fuel = companylist.fuel;
                        QuoteModel.VehicleDetails.BodyType = companylist.bodytype;
                        QuoteModel.VehicleDetails.VehicleColor = "Black";

                        $scope.QuoteErrorResponse = [];

                        var newQuote = {};
                        newQuote = angular.copy(QuoteModel);
                        $scope.QuoteReqModel.push(newQuote);
                        $scope.QuoteReModel = angular.copy($scope.QuoteReqModel);
                        //alert("changeQuote:" + $scope.QuoteReModel);
                        $sessionStorage.quoterequest = angular.copy($scope.QuoteReqModel);


                        $http({
                            url: '/PrivateCar/GetQuoteCompanyWise',
                            method: "POST",
                            data: JSON.stringify(QuoteModel)
                        }).then(function (response) {
                            if (!angular.isUndefined(response && response.data.length > 0)) {

                                $scope.ProgressCount++;
                                $scope.CompanyResData = response.data;
                                setTimeout(function () {

                                    //addonlogic();
                                    CompanyList = [];
                                }, 500);

                                if (response.data.Status === 1 && response.data.FinalPremium > 0) {
                                    $scope.QuotationRes.push(response.data);
                                    $scope.companylistName.push(response.data.CompanyName);
                                    CompanyList.push(response.data.CompanyName);

                                    setTimeout(function () {
                                        $('.div_' + response.data.CompanyName + '').waitMe({
                                            effect: 'facebook',
                                            text: 'Please Wait Quote is Loading...',
                                            color: '#ef3b85',
                                            waitTime: '-1',
                                            textPos: 'horizontal',
                                            fontSize: '18px',
                                            source: '',
                                            onClose: function () {
                                            }

                                        });

                                    }, 500);
                                    $('.fadeInDown ').waitMe("hide");
                                    var newIDV = {};
                                    newIDV.MinIDV = response.data.MinIDV;
                                    newIDV.MaxIDV = response.data.MaxIDV;
                                    newIDV.CompanyName = response.data.CompanyName;
                                    $scope.CustomIDV.push(newIDV);
                                }
                                else {
                                    $scope.QuotationError.push(response.data.CompanyName);
                                }

                                if ($scope.ProgressTotal == $scope.ProgressCount) {

                                    $(".inputdisabled").prop('disabled', false);
                                    $('.inputdisabled').attr('style', 'cursor:pointer');

                                    setTimeout(function () {
                                        $('.fadeInDown ').waitMe("hide");
                                        CompanyList = tempCompanyList;
                                    }, 500);
                                    $scope.minIDV = Math.min.apply(Math, $scope.QuotationRes.map(function (item) { return item.MinIDV; }));
                                    $scope.maxIDV = Math.max.apply(Math, $scope.QuotationRes.map(function (item) { return item.MaxIDV; }));
                                }
                            }
                            else {
                            }
                        }, function (error) {
                        });

                        //}

                    });//


                }
                else {
                    //growl.error('Error while fetching state details!!!');
                }
            }, function (error) {
                //growl.error('error');
            });
        }


        $http({
            url: '/PrivateCar/GetFuelType',
            data: { modelid: selectedmodelid },
            method: "POST"
        })
              .then(function (result) {
                  $scope.fuellist = result.data.data;
                  $scope.fueltype = { fueltype: $scope.FirstQuote.Fuel };


                  $http({
                      url: '/PrivateCar/GetVariant',
                      data: { modelid: selectedmodelid, fueltype: $scope.FirstQuote.Fuel },
                      method: "POST"
                  })
        .then(function (result) {

            $scope.variantlist = result.data.variant;
            $scope.variant = { variantid: selectedvariantid };
        })
              })




        $scope.changefueltype = function () {

            $http({
                url: '/PrivateCar/GetVariant',
                data: { modelid: selectedmodelid, fueltype: $scope.fueltype.fueltype },
                method: "POST"
            })
             .then(function (result) {
                 $scope.variantlist = result.data.variant;
             })
        }


        $scope.ChangeNCBValue = function ($event, ncb) {

            $(".ncbchip").removeClass('selected');
            $(event.target).addClass('selected');
            $scope.ddlNCB = ncb;
            if ($scope.ddlNCB == "0") {
                $scope.CurrentNcb = "20";
            }
            else if ($scope.ddlNCB == "20") {
                $scope.CurrentNcb = "25";
            }
            else if ($scope.ddlNCB == "25") {
                $scope.CurrentNcb = "35";
            }
            else if ($scope.ddlNCB == "35") {
                $scope.CurrentNcb = "45";
            }
            else if ($scope.ddlNCB == "45") {
                $scope.CurrentNcb = "50";
            }
            else if ($scope.ddlNCB == "50") {
                $scope.CurrentNcb = "50";
            }

            else if ($scope.ddlNCB == "65") {
                $scope.CurrentNcb = "50";
            }
            else {
                $scope.CurrentNcb = "0";
            }
        }

        if (!angular.isUndefined($scope.FirstQuote.ManufactureYear) && !$scope.chkClaimed) {

            if ($scope.FirstQuote.ExistingPolicyExpireStatus != "oldcar" && $scope.FirstQuote.ExistingPolicyExpireStatus != "Beyond90Days") {


                if (new Date($scope.FirstQuote.ManufactureYear).getFullYear() <= new Date().getFullYear()) {
                    $scope.ApplicableNCB = "0";
                    $scope.CurrentNcb = "20";
                }
                if (new Date($scope.FirstQuote.ManufactureYear).getFullYear() < new Date().getFullYear() - 1) {
                    $scope.ApplicableNCB = "20";
                    $scope.CurrentNcb = "25";
                }
                if (new Date($scope.FirstQuote.ManufactureYear).getFullYear() < new Date().getFullYear() - 2) {
                    $scope.ApplicableNCB = "25";
                    $scope.CurrentNcb = "35";
                }
                if (new Date($scope.FirstQuote.ManufactureYear).getFullYear() < new Date().getFullYear() - 3) {
                    $scope.ApplicableNCB = "35";
                    $scope.CurrentNcb = "45";
                }
                if (new Date($scope.FirstQuote.ManufactureYear).getFullYear() < new Date().getFullYear() - 4) {
                    $scope.ApplicableNCB = "45";
                    $scope.CurrentNcb = "50";
                }
                if (new Date($scope.FirstQuote.ManufactureYear).getFullYear() < new Date().getFullYear() - 5) {
                    $scope.ApplicableNCB = "50";
                    $scope.CurrentNcb = "50";
                }
                if (new Date($scope.FirstQuote.ManufactureYear).getFullYear() < new Date().getFullYear() - 6) {
                    $scope.ApplicableNCB = "65";
                    $scope.CurrentNcb = "50";
                }
                if (!angular.equals($scope.ddlNCB, $scope.ApplicableNCB)) {
                    $scope.ddlNCB = angular.copy($scope.ApplicableNCB);
                    //if (angular.isUndefined($scope.ddlNCB)) {
                    //  $scope.ddlNCB = angular.copy($scope.ApplicableNCB);
                    //} else {
                    //  $scope.ddlNCB = angular.copy($scope.ddlNCB);
                    //}
                }
            }

            else {

                $scope.disabledFlag = false;
            }
        }
        else {
            $scope.CurrentNcb = "0";
        }
        $scope.checkinsurer = function (inputValue) {


            if ($("#" + inputValue + "").is(":checked")) {
                $('.div_' + inputValue).show();
            }
            else {
                $('.div_' + inputValue).hide();
            }
        }

        if ($scope.IsNew) {
            var todaydate = new Date();
            $scope.PolicyStartDate = todaydate
            //$filter('date')(todaydate, "dd-MM-yyyy");

        }
        else {
            if ($scope.DontKnowPreviousInsurer) {
                $scope.PolicyStartDate = new Date();
            }
            else {
                var sdate = new Date($scope.prvexpdate);


                sdate.setDate(sdate.getDate() + 1);
                $scope.PolicyStartDate = new Date(sdate);

            }
        }

        //alert(new Date($scope.prvexpdate));
        var d = new Date();
        var a = d.setFullYear($scope.FirstQuote.ManufactureYear);
        $scope.RegistrationDate = !angular.isUndefined($scope.RegistrationDate) ? $scope.RegistrationDate : new Date(a)

        //$filter('date')(a, 'dd-MM-yyyy');
        var firstDay = new Date(d.getFullYear(), d.getMonth(), 1);
        $scope.ManufaturingDate = !angular.isUndefined($scope.ManufaturingDate) ? $scope.ManufaturingDate : new Date(firstDay)
        //$filter('date')(firstDay, "dd-MM-yyyy");

        var r_year = new Date($scope.RegistrationDate).getFullYear();
        var r_day = String(new Date($scope.RegistrationDate).getDate()).padStart(2, '0');
        var r_month = String(new Date($scope.RegistrationDate).getMonth() + 1).padStart(2, '0');
        var regdate = r_day + "-" + r_month + "-" + r_year
        $scope.regdate = regdate;
        $('#regdate').val(regdate);



        var m_year = new Date($scope.ManufaturingDate).getFullYear();
        var m_day = String(new Date($scope.ManufaturingDate).getDate()).padStart(2, '0');
        var m_month = String(new Date($scope.ManufaturingDate).getMonth() + 1).padStart(2, '0');

        var manufacturingmonth = m_day + "-" + m_month + "-" + m_year
        $scope.manufdate = manufacturingmonth;


        $('#manufacturingmonth').val(manufacturingmonth);

        var idv = 0;

        var CustomIDV = [];
        if ($sessionStorage.isidvupdate == true) {
            idv = $sessionStorage.updatedidv;
            CustomIDV = $sessionStorage.CustomIDV;
        }
        if ($scope.PrvTp == true) {
            $scope.CurrentNcb = 0;
        }
        var QuoteModel = {
            "PolicyType": $scope.PolicyType,
            "PolicyStartDate": $scope.PolicyStartDate,
            "PolicyEndDate": "2022-04-25T00:00:00+05:30",
            "PlanName": "",
            "PlanId": "",
            "CompanyName": '',
            "CustomerType": "Individual",
            "OrganizationName": "",
            "NomineeName": "",
            "NomineeDateOfBirth": "",
            "NomineeRelationShip": "",
            "NomineeGender": "",
            "AppointeeName": "",
            "AppointeeRelationShip": "",
            "IsOwnerChanged": $scope.chkVehicleOwnerChange,
            "DontKnowPreviousInsurer": $scope.DontKnowPreviousInsurer,
            "IsThirdPartyOnly": $scope.IsThirdPartyOnly,
            "IsODOnly": $scope.IsODOnly,
            "IsValidLicence": true,

            "IDV": idv,
            "RequestType": "Quote",
            "VehicleDetails":
            {

                "VariantId": "12",
                "RtoId": "121",
                "RtoZone": "A",
                "PurchaseDate": $scope.RegistrationDate,
                "ManufaturingDate": $scope.ManufaturingDate,
                "RegistrationDate": $scope.RegistrationDate,
                "RegistrationNumber": $scope.RegistrationNumber,
                "EngineNumber": "",
                "ChassisNumber": "",
                "MakeName": "",
                "ModelName": "",
                "VariantName": "",
                "MakeCode": "",
                "ModelCode": "",
                "VariantCode": "",
                "BiFuelType": "",
                "IsVehicleLoan": false,
                "LoanCompanyName": "",
                "LoanAmount": "0",
                "IsValidPUC": true,
                "PUCNumber": "",
                "PUCStartDate": "",
                "PUCEndDate": "",
                "CC": "1198",
                "SC": "5",
                "ExShowroomPrice": "0",
                "Segment": "",
                "Fuel": "",
                "BodyType": "",
                "VehicleColor": ""
            },
            "VehicleAddressDetails":
            {
                "Address1": "address one",
                "Address2": "address two",
                "Address3": "",
                "Pincode": "380051",
                "Country": "India",
                "State": "Gujarat",
                "City": "Ahmedabad"
            },
            "PreviousPolicyDetails":
            {
                "CompanyId": $scope.PrvPolicyInsurereId,
                "CompanyCode": "",
                "PreviousCompanyName": $scope.PrvPolicyInsurereName,
                "PreviousPolicyNo": "prvpolicy1234",
                "IsPreviousInsuranceClaimed": $scope.chkClaimed,
                "PreviousPolicyEndDate": new Date($scope.prvexpdate),
                "PreviousPolicyStartDate": "",
                "PreviousNcbPercentage": $scope.ddlNCB,
                "PreviousPolicyType": $scope.PrvPolicyType,
                "RequestType": "Quote"
            },
            "PreviousTPPolicyDetails":
          {
              "CompanyId": $scope.TPPrvPolicyInsurereId,
              "CompanyCode": "",
              "CompanyName": $scope.TPPrvPolicyInsurereName,
              "PolicyNo": "TP12456789",
              "PolicyEndDate": $scope.tpprvexpdate,
              "RequestType": "Quote"
          },
            "CustomerAddressDetails":
            {
                "IsRegistrationAddressSame": true,
                "Address1": "address one",
                "Address2": "address two",
                "Address3": "",
                "Pincode": "380051",
                "Country": "India",
                "State": "Gujarat",
                "City": "Ahmedabad"
            },
            "ClientDetails":
            {

            },
            "DiscountDetails":
            {
                "IsVoluntaryExcess": false,
                "IsAntiTheftDevice": false,
                "IsMemberOfAutomobileAssociation": false,
                "IsTPPDRestrictedto6000": false,
                "IsUseForHandicap": false,
                "AssociationName": "",
                "MembershipNumber": "",
                "VoluntaryExcessAmount": 0
            },
            "CoverageDetails":
            {
                "IsElectricalAccessories": !angular.isUndefined($sessionStorage.CoverageDetails) ? (angular.copy($sessionStorage.CoverageDetails.IsElectricalAccessories)) : false,
                "IsNonElectricalAccessories": !angular.isUndefined($sessionStorage.CoverageDetails) ? (angular.copy($sessionStorage.CoverageDetails.IsNonElectricalAccessories)) : false,

                "SIElectricalAccessories": !angular.isUndefined($sessionStorage.CoverageDetails) ? (angular.copy($sessionStorage.CoverageDetails.SIElectricalAccessories)) : 0,
                "SINonElectricalAccessories": !angular.isUndefined($sessionStorage.CoverageDetails) ? (angular.copy($sessionStorage.CoverageDetails.SINonElectricalAccessories)) : 0,

                "IsBiFuelKit": !angular.isUndefined($sessionStorage.CoverageDetails) ? (angular.copy($sessionStorage.CoverageDetails.IsBiFuelKit)) : false,
                "BiFuelKitAmount": !angular.isUndefined($sessionStorage.CoverageDetails) ? (angular.copy($sessionStorage.CoverageDetails.BiFuelKitAmount)) : 0,
                "IsFiberGlassFuelTank": false,
                "IsLegalLiablityPaidDriver": !angular.isUndefined($sessionStorage.CoverageDetails) ? (angular.copy($sessionStorage.CoverageDetails.IsLegalLiablityPaidDriver)) : false,
                "NoOfLLPaidDriver": !angular.isUndefined($sessionStorage.CoverageDetails) ? (angular.copy($sessionStorage.CoverageDetails.NoOfLLPaidDriver)) : 0,
                "IsEmployeeLiability": !angular.isUndefined($sessionStorage.CoverageDetails) ? (angular.copy($sessionStorage.CoverageDetails.IsEmployeeLiability)) : false,
                "IsPACoverUnnamedPerson": !angular.isUndefined($sessionStorage.CoverageDetails) ? (angular.copy($sessionStorage.CoverageDetails.IsPACoverUnnamedPerson)) : false,
                "IsPACoverPaidDriver": !angular.isUndefined($sessionStorage.CoverageDetails) ? (angular.copy($sessionStorage.CoverageDetails.IsPACoverPaidDriver)) : false,
                "PACoverPaidDriverAmount": !angular.isUndefined($sessionStorage.CoverageDetails) ? (angular.copy($sessionStorage.CoverageDetails.PACoverPaidDriverAmount)) : 0,
                "PACoverUnnamedPersonAmount": !angular.isUndefined($sessionStorage.CoverageDetails) ? (angular.copy($sessionStorage.CoverageDetails.PACoverUnnamedPersonAmount)) : 0,
                "IsPACoverForOwnerDriver": ($scope.PolicyType == "New" ? true : !angular.isUndefined($sessionStorage.CoverageDetails) ? (angular.copy($sessionStorage.CoverageDetails.IsPACoverForOwnerDriver)) : false),
                "ElectricalAccessoriesDetails": null,
                "NonElectricalAccessoriesDetails": null
            },
            "CustomIDV": CustomIDV,
            "CurrentNcb": $scope.CurrentNcb,
            "AddonCover": {
                "IsZeroDeperation": $scope.IsZeroDeperation,
                "IsConsumables": $scope.IsConsumables,
                "IsTyreCover": $scope.IsTyreCover,
                "IsNCBProtection": $scope.IsNCBProtection,
                "IsEngineProtector": $scope.IsEngineProtector,
                "IsReturntoInvoice": $scope.IsReturntoInvoice,
                "IsLossofKey": $scope.IsLossofKey,
                "IsLossofpersonalBelonging": $scope.IsLossofpersonalBelonging,
                "IsRoadSideAssistance": $scope.IsRoadSideAssistance,
                "IsPassengerAssistcover": $scope.IsPassengerAssistcover,
                "IsHydrostaticLockCover": $scope.IsHydrostaticLockCover,
                "IsHospitalCashCover": $scope.IsHospitalCashCover,
                "IsRimProtectionCover": $scope.IsRimProtectionCover,
                "IsEmergencyCover": $scope.IsEmergencyCover,
                "IsMedicalExpensesSelected": $scope.IsMedicalExpensesSelected,
                "IsAmbulanceChargesSelected": $scope.IsAmbulanceChargesSelected,
            },
            "CompanyWiseRefference": null,
            "PremiumDetails": null,
            "enquiryid": $scope.FirstQuote.EnqId
        };

        if (QuoteModel.CoverageDetails.IsElectricalAccessories) {
            ($('#chkelec').prop('checked', true));
            $("#div_elec").show();
            $scope.txt_elec = QuoteModel.CoverageDetails.SIElectricalAccessories;
            $('#txt_elec').val(QuoteModel.CoverageDetails.SIElectricalAccessories);
        }
        if (QuoteModel.CoverageDetails.IsNonElectricalAccessories) {
            ($('#chknonelec').prop('checked', true));
            $("#div_nonelec").show();
            $scope.txt_nonelec = QuoteModel.CoverageDetails.SINonElectricalAccessories;
            $('#txt_nonelec').val(QuoteModel.CoverageDetails.SINonElectricalAccessories);
        }
        if (QuoteModel.CoverageDetails.IsNonElectricalAccessories) {
            ($('#chknonelec').prop('checked', true));
            $("#div_nonelec").show();

            $scope.txt_nonelec = QuoteModel.CoverageDetails.SINonElectricalAccessories;
            $('#txt_nonelec').val(QuoteModel.CoverageDetails.SINonElectricalAccessories);
        } if (QuoteModel.CoverageDetails.IsBiFuelKit) {
            ($('#chkbifuel').prop('checked', true));
            $("#div_bifuel").show();
            $scope.txt_bifuel = QuoteModel.CoverageDetails.BiFuelKitAmount;
            $('#txt_bifuel').val(QuoteModel.CoverageDetails.BiFuelKitAmount);
        }
        if (QuoteModel.CoverageDetails.IsLegalLiablityPaidDriver) {
            ($('#chkllpaiddriver').prop('checked', true));
            $("#div_llpaiddriver").show();
            $scope.llpaiddriver = QuoteModel.CoverageDetails.NoOfLLPaidDriver;
            $('#ddl_llpaiddriver').val(QuoteModel.CoverageDetails.NoOfLLPaidDriver);
        }
        if (QuoteModel.CoverageDetails.IsPACoverPaidDriver) {
            ($('#chkpaiddriver').prop('checked', true));
            $("#div_paiddriver").show();
            $scope.paiddriver = QuoteModel.CoverageDetails.PACoverPaidDriverAmount;
            $('#ddl_paiddriver').val(QuoteModel.CoverageDetails.PACoverPaidDriverAmount);
        }
        if (QuoteModel.CoverageDetails.IsPACoverUnnamedPerson) {
            ($('#chkunnamed').prop('checked', true));
            $("#div_unnamed").show();
            $scope.unnamed = QuoteModel.CoverageDetails.PACoverUnnamedPersonAmount;
            $('#ddl_unnamed').val(QuoteModel.CoverageDetails.PACoverUnnamedPersonAmount);
        }
        if (QuoteModel.CoverageDetails.IsEmployeeLiability) {
            ($('#chkllemployee').prop('checked', true));
        }
        if (QuoteModel.CoverageDetails.IsPACoverForOwnerDriver) {
            ($('#chkowndriver').prop('checked', true));
        }
        //$scope.QualifyCompanyResData = $sessionStorage.QualifyCompanyResData;
        //$scope.FirstQuote = !angular.isUndefined($sessionStorage.FirstQuote) ? (angular.copy($sessionStorage.FirstQuote)) : $scope.FirstQuote;
        //$scope.IsGetQuoteByEnquiry = $sessionStorage.GetQByEnquiry;
        //$scope.PolicyType = !angular.isUndefined($sessionStorage.FirstQuote) ? (angular.copy($sessionStorage.FirstQuote.PolicyType)) : $scope.PolicyType;
        ////$scope.QuotationReq = !angular.isUndefined($sessionStorage.PCQuotation) ? (angular.copy($sessionStorage.PCQuotation)) : $scope.QuotationReq;
        ////$scope.QuotationRes = !angular.isUndefined($sessionStorage.PCQuotationResPonse) ? (angular.copy($sessionStorage.PCQuotationResPonse)) : $scope.QuotationRes;
        ////$scope.QuotationError=angular.copy($sessionStorage.QuotationError);
        ////$scope.idx = $scope.QuotationReq.length - 2;
        //$scope.IsNew = $scope.PolicyType === "New" ? true : false;
        //$scope.chkClaimed = !angular.isUndefined($sessionStorage.FirstQuote) ? (angular.copy($sessionStorage.FirstQuote.chkClaimed)) : $scope.chkClaimed;
        ////$scope.CurrentNcb = $scope.QuotationReq[$scope.idx].CurrentNcb;
        ////$scope.ddlNCB = !angular.isUndefined($scope.QuotationReq && $scope.QuotationReq[$scope.idx].PreviousPolicyDetails) ? ($scope.QuotationReq[$scope.idx].PreviousPolicyDetails.PreviousNcbPercentage) : "0";
        ////if ($scope.IsGetQuoteByEnquiry) {
        ////   $scope.txtIDV = $scope.QuotationReq[$scope.idx].IDV;
        ////}
        //$scope.companylistName = [];
        //$scope.CustomIDV = [];
        $scope.ProgressTotal = $scope.QualifyCompanyResData.length;
        $scope.ProgressCount = 0;


        //$(".inputdisabled").prop('disabled', true);
        //$('.inputdisabled').attr('style', 'cursor:not-allowed');




        angular.forEach($scope.QualifyCompanyResData, function (companylist) {

            QuoteModel.PolicyType = $scope.PolicyType;
            if (QuoteModel.PolicyType === "New") {
                QuoteModel.PreviousPolicyDetails = {};
            }
            else {
                QuoteModel.PreviousPolicyDetails.IsPreviousInsuranceClaimed = $scope.chkClaimed;
                QuoteModel.PreviousPolicyDetails.PreviousNcbPercentage = $scope.ddlNCB;
            }
            if (QuoteModel.IsThirdPartyOnly) {
                QuoteModel.PreviousTPPolicyDetails = {};
            }
            QuoteModel.IsOwnerChanged = $scope.chkVehicleOwnerChange;
            //QuoteModel.CurrentNcb = $scope.CurrentNcb;
            QuoteModel.CompanyName = companylist.comname;
            QuoteModel.VehicleDetails.VariantId = "12";
            QuoteModel.VehicleDetails.RtoId = "121";
            QuoteModel.VehicleDetails.RtoZone = "A";
            //QuoteModel.VehicleDetails.PurchaseDate = "22 Mar 2021";
            //QuoteModel.VehicleDetails.ManufaturingDate = "01 Mar 2021";
            //QuoteModel.VehicleDetails.RegistrationDate = "22 Mar 2021";
            QuoteModel.VehicleDetails.RegistrationNumber = $scope.RegistrationNumber;
            QuoteModel.VehicleDetails.MakeName = companylist.makename;
            QuoteModel.VehicleDetails.ModelName = companylist.modelname;
            QuoteModel.VehicleDetails.VariantName = companylist.variantname;
            QuoteModel.VehicleDetails.MakeCode = companylist.makecode;
            QuoteModel.VehicleDetails.ModelCode = companylist.modelcode;
            QuoteModel.VehicleDetails.VariantCode = companylist.variantcode;
            QuoteModel.VehicleDetails.CC = companylist.cc;
            QuoteModel.VehicleDetails.SC = companylist.sc;
            QuoteModel.VehicleDetails.ExShowroomPrice = "0";
            QuoteModel.VehicleDetails.Segment = companylist.segment;
            QuoteModel.VehicleDetails.Fuel = companylist.fuel;
            QuoteModel.VehicleDetails.BodyType = companylist.bodytype;
            QuoteModel.VehicleDetails.VehicleColor = "Black";
            //$scope.QuoteResponse = [];
            $scope.QuoteErrorResponse = [];
            //var newQuote = {};
            //newQuote = angular.copy(QuoteModel);
            //$scope.QuoteReqModel.push(newQuote);

            var newQuote = {};
            newQuote = angular.copy(QuoteModel);
            $scope.QuoteReqModel.push(newQuote);
            $scope.QuoteReModel = angular.copy($scope.QuoteReqModel);
            //$scope.QuoteReModel.push(FirstQuote);
            $sessionStorage.quoterequest = angular.copy($scope.QuoteReqModel);
            $http({
                url: '/PrivateCar/GetQuoteCompanyWise',
                method: "POST",
                data: JSON.stringify(QuoteModel)
            }).then(function (response) {
                if (!angular.isUndefined(response && response.data.length > 0)) {
                    $(".inputdisabled").prop('disabled', true);
                    $('.inputdisabled').attr('style', 'cursor:not-allowed');
                    $scope.ProgressCount++;
                    $scope.CompanyResData = response.data;

                    if (response.data.Status === 1 && response.data.FinalPremium > 0) {

                        setTimeout(function () {
                            $('.div_' + response.data.CompanyName + '').waitMe({
                                effect: 'facebook',
                                text: 'Please Wait Quote is Loading...',
                                color: '#ef3b85',
                                waitTime: '-1',
                                textPos: 'horizontal',
                                fontSize: '18px',
                                source: '',
                                onClose: function () {


                                }

                            });

                        }, 1000);
                        $scope.QuotationRes.push(response.data);
                        $scope.companylistName.push(response.data.CompanyName);




                        CompanyList.push(response.data.CompanyName);


                        $('.fadeInDown ').waitMe("hide");
                        var newIDV = {};
                        newIDV.MinIDV = response.data.MinIDV;
                        newIDV.MaxIDV = response.data.MaxIDV;
                        newIDV.CompanyName = response.data.CompanyName;
                        $scope.CustomIDV.push(newIDV);
                    }
                    else {
                        $scope.QuotationError.push(response.data.CompanyName);
                    }

                    if ($scope.ProgressTotal == $scope.ProgressCount) {
                        $(".inputdisabled").prop('disabled', false);
                        $('.inputdisabled').attr('style', 'cursor:pointer');
                        //setTimeout(function () {
                        //    $('.fadeInDown ').waitMe("hide");
                        //}, 500);

                        $scope.minIDV = Math.min.apply(Math, $scope.QuotationRes.map(function (item) { return item.MinIDV; }));
                        $scope.maxIDV = Math.max.apply(Math, $scope.QuotationRes.map(function (item) { return item.MaxIDV; }));
                        if (idv == 0) {
                            $scope.txtIDV = $scope.minIDV
                        }
                        else {
                            $scope.txtIDV = idv;
                            $("#myRange").val(idv);
                        }

                        setTimeout(function () {
                            $('.div_' + response.data.CompanyName + '').waitMe("hide");


                        }, 1000);

                        $('.fadeInDown ').waitMe("hide");
                        if (!$scope.IsGetQuoteByEnquiryNo) {

                            $http({
                                url: '/PrivateCar/InsertEnq',
                                method: "POST",
                                //data: { EnqId: $scope.FirstQuote.EnqId, req: JSON.stringify($scope.QuoteReqModel), res: JSON.stringify($scope.QuoteResponse), type: 1 }
                                data: { EnqId: $scope.FirstQuote.EnqId, req: JSON.stringify($scope.QuoteReModel), res: JSON.stringify($scope.QuotationRes), firstquote: JSON.stringify($scope.FirstQuote), type: 1 }
                            })
                            .then(function (result) {
                            })
                        }
                        //window.location.href = '/Motor/PrivateCar/PolicyDetails';
                    }
                }
                else {
                }
            }, function (error) {
            });

            //}

        });//




        $scope.claim_taken_existing_policy = function ($event, claimtaken) {
            //alert(claimtaken);
            $("#claimtaken").val(claimtaken);
            if (claimtaken === 'yes') {
                $scope.chkClaimed = true;
                $scope.CurrentNcb = "0";
                $scope.ddlNCB = "0";
            }
            else {
                $scope.chkClaimed = false;
                // $scope.GetApplicableNCB();
            }
        }



        //console.log($scope.QuotationRes);
        //console.log(companylist);


        //$scope.UpdateIdvModel = function (idv) {
        //    idv = $("#txtIDV").text();
        //    ReCalculateQuotation(idv);

        //}




        $scope.selectidvoption = function (index) {
            if (index > 2) {
                $(".chooseidv").show();
                //$scope.txtIDV = ""
                $scope.txtIDV = $scope.minIDV
            }
            else {
                if (index == 1) {
                    lowestIDV
                    $scope.txtIDV = "lowestIDV"
                }
                else {
                    $scope.txtIDV = "maximumIDV"
                }
                $(".chooseidv").hide();
            }
        }


        if ($sessionStorage.isidvupdate == true) {
            $(".inputdisabled").prop('disabled', true);
            $('.inputdisabled').attr('style', 'cursor:not-allowed');
            var updatedidv = $sessionStorage.updatedidv;

            if (updatedidv == 1) {
                $('#lowestIDV').attr('checked', true);
                $('.chooseidv').hide();

            }
            else if (updatedidv == 2) {
                $('#maximumIDV').attr('checked', true);
                $('.chooseidv').hide();
            }
            else {

                $('.chooseidv').show();
                $('#Choose-IDV').attr('checked', true);
                $("#myRange").val(updatedidv);
                $("#txtIDV").val(updatedidv);
                $scope.txtIDV = updatedidv;

            }

            //ReCalculateQuotation(updatedidv)
        }


        $scope.UpdateIdvModel = function (idv) {


            $sessionStorage.isidvupdate = true;
            if (angular.isUndefined(idv) || idv == "") {
                $("#v_idv").text("Please Enter IDV Value");
                return false;
            }

            else {
                $("#myRange").val($scope.txtIDV);
                $("#v_idv").text("");
            }
            if (idv != "lowestIDV" || idv != "maximumIDV") {
                if (idv < $scope.minIDV || idv > $scope.maxIDV) {
                    $("#v_idv").text("Please Enter IDV In Given Range.");
                    return false;
                }
            }

            $(".dropdown-menu").removeClass("show")
            if (!angular.isUndefined(idv)) {
                if (idv == "lowestIDV") {
                    ReCalculateQuotation(1); //1 is for lowest idv of company
                    $sessionStorage.updatedidv = 1;
                }
                else if (idv == "maximumIDV") {
                    ReCalculateQuotation(2);//2 is for lowest idv of company
                    $sessionStorage.updatedidv = 2;
                }
                else {
                    idv = $("#txtIDV").val();
                    ReCalculateQuotation(idv);
                    $sessionStorage.updatedidv = idv;
                }

            }
            else {

                idv = $("#txtIDV").val();
                ReCalculateQuotation(idv);
                $sessionStorage.updatedidv = idv;
            }

        }

        $scope.UpdateAddonModel = function () {


            $(".inputdisabled").prop('disabled', true);
            $('.inputdisabled').attr('style', 'cursor:not-allowed');

            setTimeout(function () {

                $(".inputdisabled").prop('disabled', false);
                $('.inputdisabled').attr('style', 'cursor:not-pointer');
                $('.fadeInDown ').waitMe("hide");

            }, 100000);
            $scope.closemodal();
            $scope.QuoteReqModel = [];
            $scope.QuotationError = [];
            CompanyList = [];
            angular.forEach($scope.QuoteReModel, function (companyQuote) {

                companyQuote.AddonCover.IsZeroDeperation = $scope.IsZeroDeperation;
                companyQuote.AddonCover.IsConsumables = $scope.IsConsumables;
                companyQuote.AddonCover.IsTyreCover = $scope.IsTyreCover;
                companyQuote.AddonCover.IsNCBProtection = $scope.IsNCBProtection;
                companyQuote.AddonCover.IsEngineProtector = $scope.IsEngineProtector;
                companyQuote.AddonCover.IsReturntoInvoice = $scope.IsReturntoInvoice;
                companyQuote.AddonCover.IsLossofKey = $scope.IsLossofKey;
                companyQuote.AddonCover.IsLossofpersonalBelonging = $scope.IsLossofpersonalBelonging;
                companyQuote.AddonCover.IsRoadSideAssistance = $scope.IsRoadSideAssistance;
                companyQuote.AddonCover.IsPassengerAssistcover = $scope.IsPassengerAssistcover;
                companyQuote.AddonCover.IsHydrostaticLockCover = $scope.IsHydrostaticLockCover;
                companyQuote.AddonCover.IsHospitalCashCover = $scope.IsHospitalCashCover;
                companyQuote.AddonCover.IsRimProtectionCover = $scope.IsRimProtectionCover;
                companyQuote.AddonCover.IsEmergencyCover = $scope.IsEmergencyCover;
                companyQuote.AddonCover.IsMedicalExpensesSelected = $scope.IsMedicalExpensesSelected;
                companyQuote.AddonCover.IsAmbulanceChargesSelected = $scope.IsAmbulanceChargesSelected;
                $scope.ProgressCount = 0;
                $scope.QuoteResponse = [];

                companyQuote.CurrentNcb = $scope.CurrentNcb;
                if (companyQuote.PolicyType === "New") {
                    companyQuote.PreviousPolicyDetails = {};
                }
                else {
                    companyQuote.PreviousPolicyDetails.IsPreviousInsuranceClaimed = $scope.chkClaimed;
                    companyQuote.PreviousPolicyDetails.PreviousNcbPercentage = $scope.ddlNCB;
                }
                if (companyQuote.IsThirdPartyOnly) {
                    companyQuote.PreviousTPPolicyDetails = {};
                }
                var newQuote = {};
                $scope.FirstQuote.IDV = idv;
                newQuote = angular.copy(companyQuote);
                $scope.QuoteReqModel.push(newQuote);
                $sessionStorage.quoterequest = angular.copy($scope.QuoteReqModel);
                //$scope.QuoteReModel = angular.copy($scope.QuoteReqModel);
                //$scope.QuoteReModel.push($scope.FirstQuote);

                $http({
                    url: '/PrivateCar/GetQuoteCompanyWise',
                    method: "POST",
                    data: JSON.stringify(companyQuote)
                }).then(function (response) {

                    if (!angular.isUndefined(response && response.data.length > 0)) {

                        $scope.CompanyResData = response.data;
                        //console.log(response.data);
                        $scope.ProgressCount++;
                        $(".inputdisabled").prop('disabled', true);
                        $('.inputdisabled').attr('style', 'cursor:not-allowed');

                        if (response.data.Status === 1 && response.data.FinalPremium > 0) {
                            setTimeout(function () {
                                $('.div_' + response.data.CompanyName + '').waitMe({
                                    effect: 'facebook',
                                    text: 'Please Wait Quote is Loading...',
                                    color: '#ef3b85',
                                    waitTime: '-1',
                                    textPos: 'horizontal',
                                    fontSize: '18px',
                                    source: '',
                                    onClose: function () {


                                    }

                                });

                            }, 1000);
                            CompanyList.push(response.data.CompanyName);
                            $scope.QuoteResponse.push(response.data);
                            $scope.companylistName.push(response.data.CompanyName);
                            $scope.QuotationRes = angular.copy($scope.QuoteResponse);
                            $scope.QuotationReq = $scope.QuoteReqModel;

                            if ($scope.ProgressTotal == $scope.ProgressCount) {

                                //$('.div_' + response.data.CompanyName + '').waitMe("hide");


                                $(".inputdisabled").prop('disabled', false);
                                $('.inputdisabled').attr('style', 'cursor:pointer');


                                //       $http({
                                //           url: '/PrivateCar/InsertEnq',
                                //           method: "POST",
                                //           data: { EnqId: $scope.FirstQuote.EnqId, req: JSON.stringify($scope.QuoteReModel), res: JSON.stringify($scope.QuotationRes), type: 2 }
                                //       })

                                //.then(function (result) {
                                //})

                            }
                        }
                        else {
                            if ($scope.ProgressTotal == $scope.ProgressCount) {
                                $(".inputdisabled").prop('disabled', false);
                                $('.inputdisabled').attr('style', 'cursor:pointer');
                            }
                            $scope.QuotationError.push(response.data.CompanyName);
                        }
                    }
                    else {

                    }
                }, function (error) {
                });

            });

            // ReCalculateQuotation('', accessory)
        }

        //$scope.UpdateAddonModel = function () {

        //    setTimeout(function () {


        //        $(".inputdisabled").prop('disabled', false);
        //        $('.inputdisabled').attr('style', 'cursor:not-pointer');
        //        $('.fadeInDown ').waitMe("hide");
        //        $('.btnprm ').waitMe("hide");
        //    }, 60000);
        //    $scope.closemodal();
        //    $scope.QuoteReqModel = [];
        //    angular.forEach($scope.QuoteReModel, function (companyQuote) {
        //        companyQuote.AddonCover.IsZeroDeperation = $scope.IsZeroDeperation;
        //        companyQuote.AddonCover.IsConsumables = $scope.IsConsumables;
        //        companyQuote.AddonCover.IsTyreCover = $scope.IsTyreCover;
        //        companyQuote.AddonCover.IsNCBProtection = $scope.IsNCBProtection;
        //        companyQuote.AddonCover.IsEngineProtector = $scope.IsEngineProtector;
        //        companyQuote.AddonCover.IsReturntoInvoice = $scope.IsReturntoInvoice;
        //        companyQuote.AddonCover.IsLossofKey = $scope.IsLossofKey;
        //        companyQuote.AddonCover.IsLossofpersonalBelonging = $scope.IsLossofpersonalBelonging;
        //        companyQuote.AddonCover.IsRoadSideAssistance = $scope.IsRoadSideAssistance;
        //        companyQuote.AddonCover.IsPassengerAssistcover = $scope.IsPassengerAssistcover;
        //        companyQuote.AddonCover.IsHydrostaticLockCover = $scope.IsHydrostaticLockCover;
        //        companyQuote.AddonCover.IsHospitalCashCover = $scope.IsHospitalCashCover;
        //        companyQuote.AddonCover.IsRimProtectionCover = $scope.IsRimProtectionCover;
        //        companyQuote.AddonCover.IsEmergencyCover = $scope.IsEmergencyCover;
        //        companyQuote.AddonCover.IsMedicalExpensesSelected = $scope.IsMedicalExpensesSelected;
        //        companyQuote.AddonCover.IsAmbulanceChargesSelected = $scope.IsAmbulanceChargesSelected;
        //        $scope.ProgressCount = 0;
        //        $scope.QuoteResponse = [];

        //        companyQuote.CurrentNcb = $scope.CurrentNcb;
        //        if (companyQuote.PolicyType === "New") {
        //            companyQuote.PreviousPolicyDetails = {};
        //        }
        //        else {
        //            companyQuote.PreviousPolicyDetails.IsPreviousInsuranceClaimed = $scope.chkClaimed;
        //            companyQuote.PreviousPolicyDetails.PreviousNcbPercentage = $scope.ddlNCB;
        //        }
        //        if (companyQuote.IsThirdPartyOnly) {
        //            companyQuote.PreviousTPPolicyDetails = {};
        //        }
        //        var newQuote = {};
        //        $scope.FirstQuote.IDV = idv;
        //        newQuote = angular.copy(companyQuote);
        //        $scope.QuoteReqModel.push(newQuote);
        //        $sessionStorage.quoterequest = angular.copy($scope.QuoteReqModel);
        //        //$scope.QuoteReModel = angular.copy($scope.QuoteReqModel);
        //        //$scope.QuoteReModel.push($scope.FirstQuote);

        //        $http({
        //            url: '/PrivateCar/GetQuoteCompanyWise',
        //            method: "POST",
        //            data: JSON.stringify(companyQuote)
        //        }).then(function (response) {
        //            if (!angular.isUndefined(response && response.data.length > 0)) {

        //                $scope.CompanyResData = response.data;
        //                console.log(response.data);
        //                $scope.ProgressCount++;


        //                if (response.data.Status === 1 && response.data.FinalPremium > 0) {

        //                    CompanyList.push(response.data.CompanyName);
        //                    $scope.QuoteResponse.push(response.data);
        //                    $scope.companylistName.push(response.data.CompanyName);
        //                    $scope.QuotationRes = angular.copy($scope.QuoteResponse);
        //                    $scope.QuotationReq = $scope.QuoteReqModel;




        //                    setTimeout(function () {
        //                        $('.btnprm').waitMe({
        //                            effect: 'bouncePulse',
        //                            maxSize: '10',
        //                            color: '#ef3b85',
        //                            waitTime: '-1',
        //                            textPos: 'horizontal',

        //                            source: '',


        //                        });
        //                        $(".inputdisabled").prop('disabled', true);
        //                        $('.inputdisabled').attr('style', 'cursor:not-allowed');
        //                    }, 5000);
        //                    setTimeout(function () {
        //                        $('.div_' + response.data.CompanyName + '').waitMe({
        //                            effect: 'facebook',
        //                            text: 'Please Wait Quote is Loading...',
        //                            color: '#ef3b85',
        //                            waitTime: '-1',
        //                            textPos: 'horizontal',
        //                            fontSize: '18px',
        //                            source: '',
        //                            onClose: function () {


        //                            }

        //                        });

        //                    }, 5000);
        //                    $('.fadeInDown ').waitMe("hide");


        //                    if ($scope.ProgressTotal == $scope.ProgressCount) {

        //                        setTimeout(function () {
        //                            addonlogic();

        //                            $(".inputdisabled").prop('disabled', false);
        //                            $('.inputdisabled').attr('style', 'cursor:not-pointer');
        //                            $('.fadeInDown ').waitMe("hide");
        //                            $('.btnprm ').waitMe("hide");
        //                        }, 5000);


        //                        setTimeout(function () {

        //                            $('.fadeInDown ').waitMe("hide");
        //                            $('.btnprm ').waitMe("hide");
        //                        }, 5000);



        //                        //       $http({
        //                        //           url: '/PrivateCar/InsertEnq',
        //                        //           method: "POST",
        //                        //           data: { EnqId: $scope.FirstQuote.EnqId, req: JSON.stringify($scope.QuoteReModel), res: JSON.stringify($scope.QuotationRes), type: 2 }
        //                        //       })




        //                        //.then(function (result) {
        //                        //})

        //                    }
        //                }
        //                else {

        //                    $scope.QuotationError.push(response.data.CompanyName);
        //                }
        //            }
        //            else {

        //            }
        //        }, function (error) {
        //        });

        //    });

        //    // ReCalculateQuotation('', accessory)
        //}
        if (angular.isUndefined($sessionStorage.CoverageDetails)) {

            accessory = [];
        }

        else {

            accessory = $sessionStorage.selectedaccessory;
        }


        function ReCalculateQuotation(idv, accessorylist, removeacc) {



            if (angular.isUndefined($sessionStorage.CustomIDV)) {
                $sessionStorage.CustomIDV = $scope.CustomIDV;
            }
            //alert($sessionStorage.CustomIDV.length);
            //var tempCompanyList = CompanyList;

            CompanyList = [];
            $(".inputdisabled").prop('disabled', true);
            $('.inputdisabled').attr('style', 'cursor:not-allowed');

            $scope.QuotationRes = undefined;
            $scope.QuoteReqModel = [];
            $scope.QuotationError = [];
            $scope.companylistName = [];
            $scope.ProgressTotal = $scope.QuoteReModel.length;
            setTimeout(function () {


                $(".inputdisabled").prop('disabled', false);
                $('.inputdisabled').attr('style', 'cursor:not-pointer');
                $('.fadeInDown ').waitMe("hide");

            }, 100000);
            angular.forEach($scope.QuoteReModel, function (companyQuote) {


                console.log(accessorylist);
                $scope.ProgressCount = 0;
                $scope.QuoteResponse = [];
                if (idv) {
                    companyQuote.IDV = idv;
                    companyQuote.CustomIDV = $scope.CustomIDV;
                }
                else if (accessorylist.length > 0) {
                    console.log($sessionStorage.selectedaccessory);
                    var coveragedetail = companyQuote.CoverageDetails;
                    coveragedetail.IsElectricalAccessories = false;
                    coveragedetail.SIElectricalAccessories = 0;
                    coveragedetail.IsNonElectricalAccessories = false;
                    coveragedetail.SINonElectricalAccessories = 0;
                    coveragedetail.IsBiFuelKit = false;
                    coveragedetail.BiFuelKitAmount = 0;
                    coveragedetail.IsPACoverPaidDriver = false;
                    coveragedetail.PACoverPaidDriverAmount = 0;
                    coveragedetail.IsPACoverUnnamedPerson = false;
                    coveragedetail.PACoverUnnamedPersonAmount = 0;
                    coveragedetail.IsLegalLiablityPaidDriver = false;
                    coveragedetail.NoOfLLPaidDriver = 0;
                    coveragedetail.IsEmployeeLiability = false;
                    coveragedetail.IsPACoverForOwnerDriver = false;


                    for (i = 0; i < accessorylist.length; i++) {
                        if (accessorylist[i] == "elec") {
                            coveragedetail.IsElectricalAccessories = true;
                            coveragedetail.SIElectricalAccessories = $('#txt_elec').val();
                        }
                        else if (accessorylist[i] == "nonelec") {
                            coveragedetail.IsNonElectricalAccessories = true;
                            coveragedetail.SINonElectricalAccessories = $('#txt_nonelec').val();
                        }
                        else if (accessorylist[i] == "bifuel") {
                            coveragedetail.IsBiFuelKit = true;
                            coveragedetail.BiFuelKitAmount = $('#txt_bifuel').val();
                        }
                        else if (accessorylist[i] == "paiddriver") {
                            coveragedetail.IsPACoverPaidDriver = true;
                            coveragedetail.PACoverPaidDriverAmount = $('#ddl_paiddriver').val();
                        }
                        else if (accessorylist[i] == "unnamed") {
                            coveragedetail.IsPACoverUnnamedPerson = true;
                            coveragedetail.PACoverUnnamedPersonAmount = $('#ddl_unnamed').val();
                        }
                        else if (accessorylist[i] == "llpaiddriver") {
                            coveragedetail.IsLegalLiablityPaidDriver = true;
                            coveragedetail.NoOfLLPaidDriver = $('#ddl_llpaiddriver').val();
                        }
                        else if (accessorylist[i] == "llemployee") {
                            coveragedetail.IsEmployeeLiability = true;
                        }
                        else if (accessorylist[i] == "owndriver") {
                            coveragedetail.IsPACoverForOwnerDriver = true;
                        }
                    }
                    //  console.log(coveragedetail);
                    companyQuote.CoverageDetails = coveragedetail;
                    $sessionStorage.CoverageDetails = companyQuote.CoverageDetails;
                    $sessionStorage.selectedaccessory = accessory;
                }
                else if (removeacc) {
                    //    $sessionStorage.selectedaccessory = accessory;
                    debugger;
                    for (var i = 0; i < accessory.length; i++) {

                        if (accessory[i] === removeacc) {

                            accessory.splice(i, 1);
                        }

                    }
                    if (removeacc == "elec") {
                        if (companyQuote.CoverageDetails.IsElectricalAccessories == false) return;
                        companyQuote.CoverageDetails.IsElectricalAccessories = false;
                        companyQuote.CoverageDetails.SIElectricalAccessories = 0;
                        //var index = $sessionStorage.selectedaccessory.indexOf("elec");
                        //$sessionStorage.selectedaccessory.splice(index, 1);

                    }
                    else if (removeacc == "nonelec") {
                        if (companyQuote.CoverageDetails.IsNonElectricalAccessories == false) return false;
                        companyQuote.CoverageDetails.IsNonElectricalAccessories = false;
                        companyQuote.CoverageDetails.SINonElectricalAccessories = 0;
                        //var index = $sessionStorage.selectedaccessory.indexOf("nonelec");
                        //$sessionStorage.selectedaccessory.splice(index, 1);
                    }
                    else if (removeacc == "bifuel") {
                        if (companyQuote.CoverageDetails.IsBiFuelKit == false) return;
                        companyQuote.CoverageDetails.IsBiFuelKit = false;
                        companyQuote.CoverageDetails.BiFuelKitAmount = 0;
                        //var index = $sessionStorage.selectedaccessory.indexOf("bifuel");
                        //$sessionStorage.selectedaccessory.splice(index, 1);
                    }
                    else if (removeacc == "paiddriver") {
                        if (companyQuote.CoverageDetails.IsPACoverPaidDriver == false) return;
                        companyQuote.CoverageDetails.IsPACoverPaidDriver = false;
                        companyQuote.CoverageDetails.PACoverPaidDriverAmount = 0;
                        //var index = $sessionStorage.selectedaccessory.indexOf("paiddriver");
                        //$sessionStorage.selectedaccessory.splice(index, 1);
                    }
                    else if (removeacc == "unnamed") {
                        if (companyQuote.CoverageDetails.IsPACoverUnnamedPerson == false) return;
                        companyQuote.CoverageDetails.IsPACoverUnnamedPerson = false;
                        companyQuote.CoverageDetails.PACoverUnnamedPersonAmount = 0;
                        //var index = $sessionStorage.selectedaccessory.indexOf("unnamed");
                        //$sessionStorage.selectedaccessory.splice(index, 1);
                    }
                    else if (removeacc == "llpaiddriver") {
                        if (companyQuote.CoverageDetails.IsLegalLiablityPaidDriver == false) return;
                        companyQuote.CoverageDetails.IsLegalLiablityPaidDriver = false;
                        companyQuote.CoverageDetails.NoOfLLPaidDriver = 0;
                        //var index = $sessionStorage.selectedaccessory.indexOf("llpaiddriver");
                        //$sessionStorage.selectedaccessory.splice(index, 1);
                    }
                    else if (removeacc == "llemployee") {
                        companyQuote.CoverageDetails.IsEmployeeLiability = false;
                    }
                    else if (removeacc == "owndriver") {
                        companyQuote.CoverageDetails.IsPACoverForOwnerDriver = false;
                    }
                    $sessionStorage.CoverageDetails = companyQuote.CoverageDetails;
                    $sessionStorage.selectedaccessory = accessory;

                }

                companyQuote.CurrentNcb = $scope.CurrentNcb;
                if (companyQuote.PolicyType === "New") {
                    companyQuote.PreviousPolicyDetails = {};
                }
                else {
                    companyQuote.PreviousPolicyDetails.IsPreviousInsuranceClaimed = $scope.chkClaimed;
                    companyQuote.PreviousPolicyDetails.PreviousNcbPercentage = $scope.ddlNCB;
                }
                if (companyQuote.IsThirdPartyOnly) {
                    companyQuote.PreviousTPPolicyDetails = {};
                }
                var newQuote = {};
                $scope.FirstQuote.IDV = idv;
                newQuote = angular.copy(companyQuote);
                $scope.QuoteReqModel.push(newQuote);
                $sessionStorage.quoterequest = angular.copy($scope.QuoteReqModel);
                //$scope.QuoteReModel = angular.copy($scope.QuoteReqModel);
                //$scope.QuoteReModel.push($scope.FirstQuote);

                $http({
                    url: '/PrivateCar/GetQuoteCompanyWise',
                    method: "POST",
                    data: JSON.stringify(companyQuote)
                }).then(function (response) {
                    if (!angular.isUndefined(response && response.data.length > 0)) {

                        $scope.CompanyResData = response.data;
                        //alert(response.data.Status);
                        $scope.ProgressCount++;


                        if (response.data.Status === 1 && response.data.FinalPremium > 0) {

                            CompanyList.push(response.data.CompanyName);
                            $scope.QuoteResponse.push(response.data);
                            $scope.companylistName.push(response.data.CompanyName);
                            $scope.QuotationRes = angular.copy($scope.QuoteResponse);
                            $scope.QuotationReq = $scope.QuoteReqModel;





                            setTimeout(function () {
                                $('.div_' + response.data.CompanyName + '').waitMe({
                                    effect: 'facebook',
                                    text: 'Please Wait Quote is Loading...',
                                    color: '#ef3b85',
                                    waitTime: '-1',
                                    textPos: 'horizontal',
                                    fontSize: '18px',
                                    source: '',
                                    onClose: function () {


                                    }

                                });

                            }, 500);

                            if ($scope.ProgressTotal == $scope.ProgressCount) {

                                setTimeout(function () {
                                    //addonlogic();

                                    $(".inputdisabled").prop('disabled', false);
                                    $('.inputdisabled').attr('style', 'cursor:not-pointer');
                                    $('.fadeInDown ').waitMe("hide");
                                    //$('.btnprm ').waitMe("hide");
                                }, 5000);

                            }
                        }
                        else {
                            if ($scope.ProgressTotal == $scope.ProgressCount) {
                                $(".inputdisabled").prop('disabled', false);
                                $('.inputdisabled').attr('style', 'cursor:pointer');
                            }
                            $scope.QuotationError.push(response.data.CompanyName);
                        }
                    }
                    else {

                    }
                }, function (error) {
                });

            });
        }



        //$scope.UpdateAccessory = function () {


        //    $(".dropdown-menu").removeClass("show")
        //    var flag = true;
        //    var ischecked = false;
        //    //var accessory = [];

        //    $('.accchk:checked').map(function () {

        //        ischecked = true;
        //        var id = $(this).attr('id').substring(3);

        //        valid = $('#txt_' + id).hasClass('ng-valid');
        //        notempty = $('#txt_' + id).hasClass('ng-not-empty');
        //        if (!valid || !notempty) {
        //            flag = false;
        //        }
        //        else

        //            accessory.push(id);
        //    });

        //    if (flag == false) {
        //        $('#acc_error').text("Please Enter Value within given range!");
        //        return false;
        //    }
        //    else if (!ischecked) {
        //        $('#acc_error').text("");
        //        $scope.btnaccupdate = false;
        //        return false;
        //    }
        //    else {
        //        $('#acc_error').text("");
        //        ReCalculateQuotation('', accessory);

        //    }

        //}
        $scope.showsubmit = function () {
            $scope.btnaccupdate = true;
        }
        $scope.UpdateAntitheft = function (value) {


            for (var j = 0; j < CompanyList.length; j++) {
                var i = CompanyList[j];
                var tot = $('.prem_' + i).text();
                totalpremium = parseInt(tot);
                antitheftvalue = $('#div_' + i).attr('data-antitheft');
                if (value == 'Y') {
                    $scope.anti = true;
                    totalpremium = totalpremium - parseInt(antitheftvalue);
                }
                else {
                    $scope.anti = false;
                    totalpremium = totalpremium + parseInt(antitheftvalue);
                }
                $('.prem_' + i).text(totalpremium);
            }
        }
        $scope.UpdateAdditionalCover = function () {
            debugger;
            var flag = true;
            var ischecked = false;
            $('.addoncover:checked').map(function () {
                ischecked = true;
                var id = $(this).attr('id').substring(3);
                if (id == "owndriver" || id == "llemployee") {
                    accessory.push(id);
                }
                else {
                    notempty = $('#ddl_' + id).val();
                    if (!notempty) {
                        flag = false;
                    }
                    else
                        accessory.push(id);
                }


            });
            //hjfdsafkh
            $('.accchk:checked').map(function () {

                ischecked = true;
                var id = $(this).attr('id').substring(3);

                valid = $('#txt_' + id).hasClass('ng-valid');
                notempty = $('#txt_' + id).val();
                if (!valid || !notempty) {
                    flag = false;
                }
                else

                    accessory.push(id);
            });
            //end

            if (flag == false) {
                $('#cover_error').text("Please Select Correct Value!");
                return false;
            }
            else {
                $('#cover_error').text("");
                if (ischecked == true) {
                    $(".dropdown-menu").removeClass("show");
                    ReCalculateQuotation('', accessory)
                }

            }
        }
        //$scope.UpdateAdditionalCover = function (pdamount, unamount, llpaiddriver) {
        //    //accessory=$sessionStorage.selectedaccessory;

        //    $(".dropdown-menu").removeClass("show")
        //    var flag = true;
        //    var ischecked = false;
        //    $('.addoncover:checked').map(function () {

        //        ischecked = true;
        //        var id = $(this).attr('id').substring(3);

        //        notempty = $('#ddl_' + id).hasClass('ng-not-empty');
        //        if (!notempty) {
        //            flag = false;
        //        }
        //        else

        //            accessory.push(id);
        //    });


        //    if (flag == false) {
        //        $('#cover_error').text("Please Select Amount!");
        //        return false;
        //    }
        //    else {
        //        $('#cover_error').text("");

        //        ReCalculateQuotation('', accessory)
        //    }
        //}
        function addonlogic() {

            $('input:checkbox.addonchk').each(function () {


                if ($(this).is(":checked")) {

                    var ischecked = true;
                    var value = $(this).attr("value");
                    var name = $(this).attr('addonname');
                    //CalculateAddon(ischecked, value, name);
                }
                //else {

                //    var ischecked = false;
                //    var value = $(this).attr("value");

                //    var name = $(this).attr('addonname');
                //    CalculateAddon(ischecked, value, name);
                //}
            });

        }


        $('.accchk').click(function () {
            debugger;
            var ischecked = $(this).prop('checked');
            var id = $(this).attr('id').substring(3);

            if (ischecked)
                $('#div_' + id).show();
            else {


                $('#div_' + id).hide();
                var isvalue;
                if (id == "elec")
                    isvalue = !angular.isUndefined($sessionStorage.CoverageDetails) ? $sessionStorage.CoverageDetails.IsElectricalAccessories : false;
                else if (id == "nonelec")
                    isvalue = !angular.isUndefined($sessionStorage.CoverageDetails) ? $sessionStorage.CoverageDetails.IsNonElectricalAccessories : false;
                else if (id == "bifuel")
                    isvalue = !angular.isUndefined($sessionStorage.CoverageDetails) ? $sessionStorage.CoverageDetails.IsBiFuelKit : false;
                $('#txt_' + id).val("");
                if (isvalue) {
                    $(".dropdown-menu").removeClass("show");
                    ReCalculateQuotation('', [], id);
                }
                else {
                    $(this).prop('checked', false);

                    return;
                }
            }
        });

        $('.addoncover').click(function () {
            debugger;
            var ischecked = $(this).prop('checked');
            var id = $(this).attr('id').substring(3);
            if (ischecked) {
                $('#div_' + id).show();
            }
            else {

                if (id == "owndriver") {
                    isvalue = !angular.isUndefined($sessionStorage.CoverageDetails) ? $sessionStorage.CoverageDetails.IsPACoverForOwnerDriver : false;
                }
                else if (id == "llemployee") {
                    isvalue = !angular.isUndefined($sessionStorage.CoverageDetails) ? $sessionStorage.CoverageDetails.IsEmployeeLiability : false;
                }
                else {
                    $('#div_' + id).hide();

                    var isvalue;
                    if (id == "llpaiddriver")
                        isvalue = !angular.isUndefined($sessionStorage.CoverageDetails) ? $sessionStorage.CoverageDetails.IsLegalLiablityPaidDriver : false;
                    else if (id == "paiddriver")
                        isvalue = !angular.isUndefined($sessionStorage.CoverageDetails) ? $sessionStorage.CoverageDetails.IsPACoverPaidDriver : false;
                    else if (id == "unnamed")
                        isvalue = !angular.isUndefined($sessionStorage.CoverageDetails) ? $sessionStorage.CoverageDetails.IsPACoverUnnamedPerson : false;
                    $('#ddl_' + id).val("");
                }
                if (isvalue) {
                    $(".dropdown-menu").removeClass("show");
                    ReCalculateQuotation('', [], id);
                }
                else {
                    return;
                }


            }
        });

        $('#chkowndriver').click(function () {
            debugger;
            var ischecked = $(this).prop('checked');
            if ($scope.PolicyType == "New") {
                $(this).prop('checked', true);
            }
            //if (!ischecked) {
            //    $(this).prop('checked', true);
            //    $('#modal-PaOwner').modal('show');
            //}
            //else
            //    UpdateCover(ischecked, 'owndriver');
        })
    });





    $('#btnparemove').click(function () {
        UpdateCover(false, 'owndriver');
        $('#chkowndriver').prop('checked', false);
        $('#modal-PaOwner').modal('hide');
    })
    $('#btncancel').click(function () {
        $('#modal-PaOwner').modal('hide');
    });

    //$('#chkllemployee').click(function () {

    //    var ischecked = $(this).prop('checked');
    //    UpdateCover(ischecked, 'LLemployee');
    //});






    function UpdateCover(ischecked, id) {
        for (var j = 0; j < CompanyList.length; j++) {

            var html = "";
            var coveramount = 0;
            var i = CompanyList[j];
            var tot = $('.prem_' + i).text();
            totalpremium = parseInt(tot);
            if (id == "owndriver")
                coveramount = $('#div_' + i).attr('data-pacover');
            else if (id == "paiddriver")
                coveramount = $('#div_' + i).attr('data-paiddriver');
            else if (id == "LLemployee")
                coveramount = $('#div_' + i).attr('data-LLemployee');

            if (ischecked) {
                totalpremium = totalpremium + parseInt(coveramount);
            }
            else {
                totalpremium = totalpremium - parseInt(coveramount);
            }
            $('.prem_' + i).text(totalpremium);
        }
    }




    //$(document).on('click', '.selectMe', function () {

    //    $("#prm_ADDON").html("");
    //    $("#modal-policy").modal("show");
    //    var totalcover = 0, totalaccessory = 0;
    //    var productID = $(this).attr('data-title');
    //    var basicod = $("#div_" + productID).attr('data-basicod');
    //    var idv = $("#div_" + productID).attr('data-idv');
    //    var basictp = $("#div_" + productID).attr('data-thirdpartycover');
    //    var owndrivercover = $("#div_" + productID).attr('data-pacover');
    //    var paiddrivercover = $("#div_" + productID).attr('data-paiddriver');
    //    var LLpaiddrivercover = $("#div_" + productID).attr('data-LLpaiddriver');
    //    var LLemployeecover = $("#div_" + productID).attr('data-LLemployee');
    //    var unnamedpersoncover = $("#div_" + productID).attr('data-unnamedperson');
    //    var electricalcover = $("#div_" + productID).attr('data-electrical');
    //    var nonelectricalcover = $("#div_" + productID).attr('data-nonelectrical');
    //    var cngcover = $("#div_" + productID).attr('data-bifuel');
    //    var tpcngcover = $("#div_" + productID).attr('data-tpbifuel');
    //    var ncbdiscount = $("#div_" + productID).attr('data-ncbdiscount');

    //    var image = "/assets/images/" + productID + ".png";
    //    $("#modalimg").attr('src', image);
    //    $("#modalimg").attr('style', 'width:50%');
    //    $("#prm_IDV").text(idv);
    //    $("#prm_OD").text(basicod);

    //    $("#prm_TP").text(basictp);
    //    $("#prm_NCB").text(ncbdiscount);
    //    $("#prm_DIS").text(0);
    //    $("#prm_NDIS").text(ncbdiscount);
    //    var totaladdon = $('#' + productID + '_totaladdon').val();
    //    if (totaladdon > 0) {
    //        $("#divaddonprm").show();
    //        $("#prm_Totaladdon").text(totaladdon);
    //    }
    //    else
    //        $("#divaddonprm").hide();
    //    var addons = $('#' + productID + '_addonwithval').html();
    //    $("#prm_ADDON").append(addons);
    //    //owndriverlogic start

    //    if ($('#chkowndriver').prop('checked')) {
    //        $("#div_OWNDRIVER").show();
    //        $("#prm_Owndirver").text(owndrivercover);
    //        totalcover = totalcover + parseInt(owndrivercover);

    //    }
    //    else {
    //        $("#div_OWNDRIVER").hide();
    //    }
    //    // end owndriverlogic
    //    //Start paiddriverlogic
    //    if ($('#chkpaiddriver').prop('checked')) {
    //        $("#div_PAIDDRIVER").show();
    //        $("#prm_Paiddriver").text(paiddrivercover);
    //        totalcover = totalcover + parseInt(paiddrivercover);

    //    }
    //    else {
    //        $("#div_PAIDDRIVER").hide();
    //    }
    //    //end paiddriverlogic
    //    //Start LLpaiddriverlogic
    //    if ($('#chkllpaiddriver').prop('checked')) {

    //        $("#div_LLTOPAIDDRIVER").show();
    //        $("#prm_LLPaiddriver").text(LLpaiddrivercover);
    //        totalcover = totalcover + parseInt(LLpaiddrivercover);

    //    }
    //    else {
    //        $("#div_LLTOPAIDDRIVER").hide();
    //    }
    //    //end LLpaiddriverlogic
    //    // start LLemployeelogic
    //    if ($('#chkllemployee').prop('checked')) {
    //        $("#div_LLEMPLOYEE").show();
    //        $("#prm_LLemployee").text(LLemployeecover);
    //        totalcover = totalcover + parseInt(LLemployeecover);

    //    }
    //    else {
    //        $("#div_LLEMPLOYEE").hide();
    //    }
    //    // end LLemployee
    //    // start unnamedperson
    //    if ($('#chkunnamed').prop('checked')) {
    //        $("#div_UNNAMEDPRSN").show();
    //        $("#prm_unnamedprsn").text(unnamedpersoncover);
    //        totalcover = totalcover + parseInt(unnamedpersoncover);

    //    }
    //    else {
    //        $("#div_UNNAMEDPRSN").hide();
    //    }
    //    // end unnamedpersonlogic
    //    // start electricalaccessory
    //    if (productID != "DIGIT") {
    //        if ($('#chkelec').prop('checked')) {
    //            $("#div_elecacc").show();
    //            $("#prm_electrical").text(electricalcover);
    //            totalaccessory = totalaccessory + parseInt(electricalcover);

    //        }
    //        else {
    //            $("#div_elecacc").hide();
    //        }
    //        // end electricalaccessory
    //        // start nonelectricalaccessory
    //        if ($('#chknonelec').prop('checked')) {
    //            $("#div_nonelecacc").show();
    //            $("#prm_nonelectrical").text(nonelectricalcover);
    //            totalaccessory = totalaccessory + parseInt(nonelectricalcover);

    //        }
    //        else {
    //            $("#div_nonelecacc").hide();
    //        }
    //        // end nonelectricalaccessory
    //        // start cngaccessory
    //        if ($('#chkbifuel').prop('checked')) {
    //            $("#div_cngacc").show();
    //            $("#div_TPCNG").show();
    //            $("#prm_cng").text(cngcover);
    //            $("#prm_tpcng").text(tpcngcover);
    //            totalaccessory = totalaccessory + parseInt(cngcover);
    //            totalcover = totalcover + parseInt(tpcngcover);
    //        }
    //        else {
    //            $("#div_cngacc").hide();
    //            $("#div_TPCNG").hide();
    //        }
    //        // end cngaccessory
    //    }
    //    $("#prm_NTP").text(parseFloat(basictp) + totalcover);
    //    $("#prm_NOD").text(parseFloat(basicod) + totalaccessory);
    //    var totalpremium = $('.prem_' + productID).text();
    //    var Prem_GST = parseFloat(totalpremium) * parseFloat(0.18);
    //    var Prem_With_GST = parseFloat(Prem_GST.toFixed(0)) + parseFloat(totalpremium);
    //    $("#prm_TOT").text(totalpremium);
    //    $("#prm_Net").text(totalpremium);
    //    $("#prm_service").text(Prem_GST.toFixed(0));
    //    $("#prm_Final").text(Prem_With_GST);


    $(document).on('click', '.selectMe', function () {

        var datatitle = $(this).attr('data-title');
        SetOdTpValues('show', datatitle);
    });

    function SetOdTpValues(addontype, datatitle) {

        $("#prm_ADDON").html("");

        if (addontype == "show") {
            $("#modal-policy").modal("show");
        }
        else {
            $("#modal-policy").modal("hide");
        }

        var totalcover = 0, totalaccessory = 0;
        var productID = datatitle;
        var basicod = $("#div_" + productID).attr('data-basicod');
        var idv = $("#div_" + productID).attr('data-idv');
        var basictp = $("#div_" + productID).attr('data-thirdpartycover');
        var owndrivercover = $("#div_" + productID).attr('data-pacover');
        var paiddrivercover = $("#div_" + productID).attr('data-paiddriver');
        var LLpaiddrivercover = $("#div_" + productID).attr('data-LLpaiddriver');
        var LLemployeecover = $("#div_" + productID).attr('data-LLemployee');
        var unnamedpersoncover = $("#div_" + productID).attr('data-unnamedperson');
        var electricalcover = $("#div_" + productID).attr('data-electrical');
        var nonelectricalcover = $("#div_" + productID).attr('data-nonelectrical');
        var cngcover = $("#div_" + productID).attr('data-bifuel');
        var tpcngcover = $("#div_" + productID).attr('data-tpbifuel');
        var finalprem = $("#div_" + productID).attr('data-prm');
        //var ncbdiscount = $("#div_" + productID).attr('data-ncbdiscount');
        //  var iszerodep = false;
        var ncbdiscount = $("#div_" + productID).attr('data-ncbdiscount');
        var image = "/assets/images/" + productID + ".png";
        $("#modalimg").attr('src', image);
        $("#modalimg").attr('style', 'width:50%');
        $("#prm_IDV").text(idv);
        $("#prm_OD").text(basicod);

        $("#prm_TP").text(basictp);
        $("#prm_NCB").text(ncbdiscount);
        $("#prm_DIS").text(0);
        $("#prm_NDIS").text(ncbdiscount);

        var totaladdon = $('#' + productID + '_totaladdon').val();
        if (totaladdon > 0) {
            $("#divaddonprm").show();
            $("#prm_Totaladdon").text(totaladdon);
        }
        else {
            $("#prm_Totaladdon").text(0);
            $("#divaddonprm").hide();
        }
        //$("#divaddonprm").show();
        var addons = $('#' + productID + '_addonwithval').html();
        $("#prm_ADDON").append(addons);
        //owndriverlogic start





        if (productID == "ICICI" || productID == "HDFC" || productID == "TATA") {
            $("#div_OWNDRIVER").show();
            $("#prm_Owndirver").text(owndrivercover);
            totalcover = totalcover + parseInt(owndrivercover);
        }


        else {
            if ($('#chkowndriver').prop('checked')) {
                $("#div_OWNDRIVER").show();
                $("#prm_Owndirver").text(owndrivercover);
                totalcover = totalcover + parseInt(owndrivercover);

            }
            else {
                $("#div_OWNDRIVER").hide();
            }
        }
        // end owndriverlogic
        //Start paiddriverlogic
        if ($('#chkpaiddriver').prop('checked')) {
            $("#div_PAIDDRIVER").show();
            $("#prm_Paiddriver").text(paiddrivercover);
            totalcover = totalcover + parseInt(paiddrivercover);

        }
        else {
            $("#div_PAIDDRIVER").hide();
        }
        //end paiddriverlogic
        //Start LLpaiddriverlogic
        if ($('#chkllpaiddriver').prop('checked')) {

            $("#div_LLTOPAIDDRIVER").show();
            $("#prm_LLPaiddriver").text(LLpaiddrivercover);
            totalcover = totalcover + parseInt(LLpaiddrivercover);

        }
        else {
            $("#div_LLTOPAIDDRIVER").hide();
        }
        //end LLpaiddriverlogic
        // start LLemployeelogic
        if ($('#chkllemployee').prop('checked')) {
            $("#div_LLEMPLOYEE").show();
            $("#prm_LLemployee").text(LLemployeecover);
            totalcover = totalcover + parseInt(LLemployeecover);

        }
        else {
            $("#div_LLEMPLOYEE").hide();
        }
        // end LLemployee
        // start unnamedperson
        if ($('#chkunnamed').prop('checked')) {
            $("#div_UNNAMEDPRSN").show();
            $("#prm_unnamedprsn").text(unnamedpersoncover);
            totalcover = totalcover + parseInt(unnamedpersoncover);

        }
        else {
            $("#div_UNNAMEDPRSN").hide();
        }
        // end unnamedpersonlogic
        // start electricalaccessory
        if (productID != "DIGIT") {
            if ($('#chkelec').prop('checked')) {
                $("#div_elecacc").show();
                $("#prm_electrical").text(electricalcover);
                totalaccessory = totalaccessory + parseInt(electricalcover);

            }
            else {
                $("#div_elecacc").hide();
            }
            // end electricalaccessory
            // start nonelectricalaccessory
            if ($('#chknonelec').prop('checked')) {
                $("#div_nonelecacc").show();
                $("#prm_nonelectrical").text(nonelectricalcover);
                totalaccessory = totalaccessory + parseInt(nonelectricalcover);

            }
            else {
                $("#div_nonelecacc").hide();
            }
            // end nonelectricalaccessory
            // start cngaccessory
            if ($('#chkbifuel').prop('checked')) {
                $("#div_cngacc").show();
                $("#div_TPCNG").show();
                $("#prm_cng").text(cngcover);
                $("#prm_tpcng").text(tpcngcover);
                totalaccessory = totalaccessory + parseInt(cngcover);
                totalcover = totalcover + parseInt(tpcngcover);
            }
            else {
                $("#div_cngacc").hide();
                $("#div_TPCNG").hide();
            }
            // end cngaccessory
        }
        else {
            $("#div_elecacc").hide();
            $("#div_nonelecacc").hide();
            $("#div_cngacc").hide();
            $("#div_TPCNG").hide();
        }
        $("#prm_NTP").text(parseFloat(basictp) + totalcover);
        $("#prm_NOD").text(parseFloat(basicod) + totalaccessory);


        var totalpremium = $('.prem_' + productID).text();
        //var Prem_GST = parseFloat(totalpremium) * parseFloat(0.18);
        var Prem_GST = parseFloat($("#div_" + productID).attr('data-gst'));
        //var Prem_With_GST = parseFloat(Prem_GST.toFixed(0)) + parseFloat(totalpremium);
        $("#prm_TOT").text(totalpremium);
        $("#prm_Net").text(totalpremium);
        $("#prm_service").text(Prem_GST.toFixed(0));
        //$("#prm_Final").text(Prem_With_GST);
        $("#prm_Final").text(finalprem);
    }
    //$(document).on('click', '.selectMe', function () {

    //    $("#prm_ADDON").html("");
    //    $("#modal-policy").modal("show");
    //    var totalcover = 0, totalaccessory = 0;
    //    var productID = $(this).attr('data-title');
    //    var basicod = $("#div_" + productID).attr('data-basicod');
    //    var idv = $("#div_" + productID).attr('data-idv');
    //    var basictp = $("#div_" + productID).attr('data-thirdpartycover');
    //    var owndrivercover = $("#div_" + productID).attr('data-pacover');
    //    var paiddrivercover = $("#div_" + productID).attr('data-paiddriver');
    //    var LLpaiddrivercover = $("#div_" + productID).attr('data-LLpaiddriver');
    //    var LLemployeecover = $("#div_" + productID).attr('data-LLemployee');
    //    var unnamedpersoncover = $("#div_" + productID).attr('data-unnamedperson');
    //    var electricalcover = $("#div_" + productID).attr('data-electrical');
    //    var nonelectricalcover = $("#div_" + productID).attr('data-nonelectrical');
    //    var cngcover = $("#div_" + productID).attr('data-bifuel');
    //    var tpcngcover = $("#div_" + productID).attr('data-tpbifuel');

    //    //var ncbdiscount = $("#div_" + productID).attr('data-ncbdiscount');
    //  //  var iszerodep = false;
    //    var ncbdiscount = $("#div_" + productID).attr('data-ncbdiscount');
    //    //if (productID == "DIGIT") {
    //    //    $('.addonchk:checked').map(function () {
    //    //        var value = $(this).attr("value");
    //    //        if (value == "zerodep")
    //    //            iszerodep = true;
    //    //    })
    //    //    if (iszerodep)
    //    //        ncbdiscount = $("#div_" + productID).attr('data-ncbwithzerodep');
    //    //    else
    //    //        ncbdiscount = $("#div_" + productID).attr('data-ncbdiscount');
    //    //}
    //    var image = "/assets/images/" + productID + ".png";
    //    $("#modalimg").attr('src', image);
    //    $("#modalimg").attr('style', 'width:50%');
    //    $("#prm_IDV").text(idv);
    //    $("#prm_OD").text(basicod);

    //    $("#prm_TP").text(basictp);
    //    $("#prm_NCB").text(ncbdiscount);
    //    $("#prm_DIS").text(0);
    //    $("#prm_NDIS").text(ncbdiscount);
    //    debugger;
    //    var totaladdon = $('#' + productID + '_totaladdon').val();
    //    if (totaladdon > 0) {
    //        $("#divaddonprm").show();
    //        $("#prm_Totaladdon").text(totaladdon);
    //    }
    //    else
    //        $("#divaddonprm").hide();

    //    //$("#divaddonprm").show();
    //    var addons = $('#' + productID + '_addonwithval').html();
    //    $("#prm_ADDON").append(addons);
    //    //owndriverlogic start

    //    if ($('#chkowndriver').prop('checked')) {
    //        $("#div_OWNDRIVER").show();
    //        $("#prm_Owndirver").text(owndrivercover);
    //        totalcover = totalcover + parseInt(owndrivercover);

    //    }
    //    else {
    //        $("#div_OWNDRIVER").hide();
    //    }
    //    // end owndriverlogic
    //    //Start paiddriverlogic
    //    if ($('#chkpaiddriver').prop('checked')) {
    //        $("#div_PAIDDRIVER").show();
    //        $("#prm_Paiddriver").text(paiddrivercover);
    //        totalcover = totalcover + parseInt(paiddrivercover);

    //    }
    //    else {
    //        $("#div_PAIDDRIVER").hide();
    //    }
    //    //end paiddriverlogic
    //    //Start LLpaiddriverlogic
    //    if ($('#chkllpaiddriver').prop('checked')) {

    //        $("#div_LLTOPAIDDRIVER").show();
    //        $("#prm_LLPaiddriver").text(LLpaiddrivercover);
    //        totalcover = totalcover + parseInt(LLpaiddrivercover);

    //    }
    //    else {
    //        $("#div_LLTOPAIDDRIVER").hide();
    //    }
    //    //end LLpaiddriverlogic
    //    // start LLemployeelogic
    //    if ($('#chkllemployee').prop('checked')) {
    //        $("#div_LLEMPLOYEE").show();
    //        $("#prm_LLemployee").text(LLemployeecover);
    //        totalcover = totalcover + parseInt(LLemployeecover);

    //    }
    //    else {
    //        $("#div_LLEMPLOYEE").hide();
    //    }
    //    // end LLemployee
    //    // start unnamedperson
    //    if ($('#chkunnamed').prop('checked')) {
    //        $("#div_UNNAMEDPRSN").show();
    //        $("#prm_unnamedprsn").text(unnamedpersoncover);
    //        totalcover = totalcover + parseInt(unnamedpersoncover);

    //    }
    //    else {
    //        $("#div_UNNAMEDPRSN").hide();
    //    }
    //    // end unnamedpersonlogic
    //    // start electricalaccessory
    //    if (productID != "DIGIT") {
    //        if ($('#chkelec').prop('checked')) {
    //            $("#div_elecacc").show();
    //            $("#prm_electrical").text(electricalcover);
    //            totalaccessory = totalaccessory + parseInt(electricalcover);

    //        }
    //        else {
    //            $("#div_elecacc").hide();
    //        }
    //        // end electricalaccessory
    //        // start nonelectricalaccessory
    //        if ($('#chknonelec').prop('checked')) {
    //            $("#div_nonelecacc").show();
    //            $("#prm_nonelectrical").text(nonelectricalcover);
    //            totalaccessory = totalaccessory + parseInt(nonelectricalcover);

    //        }
    //        else {
    //            $("#div_nonelecacc").hide();
    //        }
    //        // end nonelectricalaccessory
    //        // start cngaccessory
    //        if ($('#chkbifuel').prop('checked')) {
    //            $("#div_cngacc").show();
    //            $("#div_TPCNG").show();
    //            $("#prm_cng").text(cngcover);
    //            $("#prm_tpcng").text(tpcngcover);
    //            totalaccessory = totalaccessory + parseInt(cngcover);
    //            totalcover = totalcover + parseInt(tpcngcover);
    //        }
    //        else {
    //            $("#div_cngacc").hide();
    //            $("#div_TPCNG").hide();
    //        }
    //        // end cngaccessory
    //    }
    //    $("#prm_NTP").text(parseFloat(basictp) + totalcover);
    //    $("#prm_NOD").text(parseFloat(basicod) + totalaccessory);


    //    var totalpremium = $('.prem_' + productID).text();
    //    var Prem_GST = parseFloat(totalpremium) * parseFloat(0.18);
    //    var Prem_With_GST = parseFloat(Prem_GST.toFixed(0)) + parseFloat(totalpremium);
    //    $("#prm_TOT").text(totalpremium);
    //    $("#prm_Net").text(totalpremium);
    //    $("#prm_service").text(Prem_GST.toFixed(0));
    //    $("#prm_Final").text(Prem_With_GST);

    //});



</script>
<script>



</script>
<script>

    $('.datepicker, .drop-avoid').click(function (e) {
        e.stopPropagation();
    });


    var today = new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate());
    //$('.regdate').datepicker({
    //    uiLibrary: 'bootstrap4',
    //    iconsLibrary: 'fontawesome',

    //    // minDate: today,
    //    maxDate: today
    //});

    //$('.manufdate').datepicker({
    //    uiLibrary: 'bootstrap4',
    //    iconsLibrary: 'fontawesome',

    //    maxDate: function () {

    //        return $('.regdate').val();
    //    }
    //});
</script>
<script>
    $(window).scroll(function () {
        var scroll = $(window).scrollTop();

        if (scroll >= 130) {
            $("body").addClass("top-fixed");
        } else {
            $("body").removeClass("top-fixed");
        }
    });
    $(".mobile-fil-b").click(function () {
        $("body").toggleClass("open-filter");
    });

    function numberOnly(event) {
        var key = event.keyCode;
        return (((key >= 48 && key <= 57) || (key >= 37 && key <= 40) || (key >= 96 && key <= 105)) || (key == 9 || key == 8));

    }
</script>