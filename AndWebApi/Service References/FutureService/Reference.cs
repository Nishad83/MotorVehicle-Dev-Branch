//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AndWebApi.FutureService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FutureService.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AgentEnqService", ReplyAction="http://tempuri.org/IService/AgentEnqServiceResponse")]
        string AgentEnqService(string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AgentEnqService", ReplyAction="http://tempuri.org/IService/AgentEnqServiceResponse")]
        System.Threading.Tasks.Task<string> AgentEnqServiceAsync(string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CreatePolicy", ReplyAction="http://tempuri.org/IService/CreatePolicyResponse")]
        string CreatePolicy(string Product, string XML);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CreatePolicy", ReplyAction="http://tempuri.org/IService/CreatePolicyResponse")]
        System.Threading.Tasks.Task<string> CreatePolicyAsync(string Product, string XML);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CreateQuotation", ReplyAction="http://tempuri.org/IService/CreateQuotationResponse")]
        string CreateQuotation(string Product, string XML);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CreateQuotation", ReplyAction="http://tempuri.org/IService/CreateQuotationResponse")]
        System.Threading.Tasks.Task<string> CreateQuotationAsync(string Product, string XML);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CreateProposal", ReplyAction="http://tempuri.org/IService/CreateProposalResponse")]
        string CreateProposal(string Product, string XML);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CreateProposal", ReplyAction="http://tempuri.org/IService/CreateProposalResponse")]
        System.Threading.Tasks.Task<string> CreateProposalAsync(string Product, string XML);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CreateAndUpdateClient", ReplyAction="http://tempuri.org/IService/CreateAndUpdateClientResponse")]
        string CreateAndUpdateClient(string XML);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CreateAndUpdateClient", ReplyAction="http://tempuri.org/IService/CreateAndUpdateClientResponse")]
        System.Threading.Tasks.Task<string> CreateAndUpdateClientAsync(string XML);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CreateAndUpdateClientMultipleAddress", ReplyAction="http://tempuri.org/IService/CreateAndUpdateClientMultipleAddressResponse")]
        string CreateAndUpdateClientMultipleAddress(string XML);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CreateAndUpdateClientMultipleAddress", ReplyAction="http://tempuri.org/IService/CreateAndUpdateClientMultipleAddressResponse")]
        System.Threading.Tasks.Task<string> CreateAndUpdateClientMultipleAddressAsync(string XML);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CreatePolicyWithPayer", ReplyAction="http://tempuri.org/IService/CreatePolicyWithPayerResponse")]
        string CreatePolicyWithPayer(string Product, string XML, string PayerID, string multiReceipt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CreatePolicyWithPayer", ReplyAction="http://tempuri.org/IService/CreatePolicyWithPayerResponse")]
        System.Threading.Tasks.Task<string> CreatePolicyWithPayerAsync(string Product, string XML, string PayerID, string multiReceipt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ClientAndorsementService", ReplyAction="http://tempuri.org/IService/ClientAndorsementServiceResponse")]
        string ClientAndorsementService(string XML);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ClientAndorsementService", ReplyAction="http://tempuri.org/IService/ClientAndorsementServiceResponse")]
        System.Threading.Tasks.Task<string> ClientAndorsementServiceAsync(string XML);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CreateOnlyReceipt", ReplyAction="http://tempuri.org/IService/CreateOnlyReceiptResponse")]
        string CreateOnlyReceipt(string XML);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CreateOnlyReceipt", ReplyAction="http://tempuri.org/IService/CreateOnlyReceiptResponse")]
        System.Threading.Tasks.Task<string> CreateOnlyReceiptAsync(string XML);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ClaimAndNCB", ReplyAction="http://tempuri.org/IService/ClaimAndNCBResponse")]
        string ClaimAndNCB(string POlicyNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ClaimAndNCB", ReplyAction="http://tempuri.org/IService/ClaimAndNCBResponse")]
        System.Threading.Tasks.Task<string> ClaimAndNCBAsync(string POlicyNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/RenewalCloningService", ReplyAction="http://tempuri.org/IService/RenewalCloningServiceResponse")]
        string RenewalCloningService(string XML);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/RenewalCloningService", ReplyAction="http://tempuri.org/IService/RenewalCloningServiceResponse")]
        System.Threading.Tasks.Task<string> RenewalCloningServiceAsync(string XML);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FetchPinCode", ReplyAction="http://tempuri.org/IService/FetchPinCodeResponse")]
        System.Data.DataSet FetchPinCode(string Pincode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FetchPinCode", ReplyAction="http://tempuri.org/IService/FetchPinCodeResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchPinCodeAsync(string Pincode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/isClaim", ReplyAction="http://tempuri.org/IService/isClaimResponse")]
        System.Data.DataSet isClaim(string policyno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/isClaim", ReplyAction="http://tempuri.org/IService/isClaimResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> isClaimAsync(string policyno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/InspectService", ReplyAction="http://tempuri.org/IService/InspectServiceResponse")]
        string InspectService(string Product, string XML);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/InspectService", ReplyAction="http://tempuri.org/IService/InspectServiceResponse")]
        System.Threading.Tasks.Task<string> InspectServiceAsync(string Product, string XML);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ClientEnq", ReplyAction="http://tempuri.org/IService/ClientEnqResponse")]
        string ClientEnq(string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ClientEnq", ReplyAction="http://tempuri.org/IService/ClientEnqResponse")]
        System.Threading.Tasks.Task<string> ClientEnqAsync(string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FetcheMandateDetails", ReplyAction="http://tempuri.org/IService/FetcheMandateDetailsResponse")]
        System.Data.DataSet FetcheMandateDetails(string PolicyNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FetcheMandateDetails", ReplyAction="http://tempuri.org/IService/FetcheMandateDetailsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetcheMandateDetailsAsync(string PolicyNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/processcovernote", ReplyAction="http://tempuri.org/IService/processcovernoteResponse")]
        string processcovernote(string msgtext, string mobilenumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/processcovernote", ReplyAction="http://tempuri.org/IService/processcovernoteResponse")]
        System.Threading.Tasks.Task<string> processcovernoteAsync(string msgtext, string mobilenumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Pos_MispMaster", ReplyAction="http://tempuri.org/IService/Pos_MispMasterResponse")]
        string Pos_MispMaster(string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Pos_MispMaster", ReplyAction="http://tempuri.org/IService/Pos_MispMasterResponse")]
        System.Threading.Tasks.Task<string> Pos_MispMasterAsync(string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ITGI", ReplyAction="http://tempuri.org/IService/ITGIResponse")]
        string ITGI(string XML);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ITGI", ReplyAction="http://tempuri.org/IService/ITGIResponse")]
        System.Threading.Tasks.Task<string> ITGIAsync(string XML);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/HealthRenewal", ReplyAction="http://tempuri.org/IService/HealthRenewalResponse")]
        string HealthRenewal(string XML);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/HealthRenewal", ReplyAction="http://tempuri.org/IService/HealthRenewalResponse")]
        System.Threading.Tasks.Task<string> HealthRenewalAsync(string XML);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetHBZone", ReplyAction="http://tempuri.org/IService/GetHBZoneResponse")]
        string GetHBZone(string PinCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetHBZone", ReplyAction="http://tempuri.org/IService/GetHBZoneResponse")]
        System.Threading.Tasks.Task<string> GetHBZoneAsync(string PinCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CheckDuplicateClient", ReplyAction="http://tempuri.org/IService/CheckDuplicateClientResponse")]
        string CheckDuplicateClient(string Product, string XML);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CheckDuplicateClient", ReplyAction="http://tempuri.org/IService/CheckDuplicateClientResponse")]
        System.Threading.Tasks.Task<string> CheckDuplicateClientAsync(string Product, string XML);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BankaAgentEnqService", ReplyAction="http://tempuri.org/IService/BankaAgentEnqServiceResponse")]
        string BankaAgentEnqService(string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/BankaAgentEnqService", ReplyAction="http://tempuri.org/IService/BankaAgentEnqServiceResponse")]
        System.Threading.Tasks.Task<string> BankaAgentEnqServiceAsync(string xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/HealthCombo", ReplyAction="http://tempuri.org/IService/HealthComboResponse")]
        string HealthCombo(string Product, string XML);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/HealthCombo", ReplyAction="http://tempuri.org/IService/HealthComboResponse")]
        System.Threading.Tasks.Task<string> HealthComboAsync(string Product, string XML);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/RenewalMotorData", ReplyAction="http://tempuri.org/IService/RenewalMotorDataResponse")]
        string RenewalMotorData(string Product, string Agent, string month, string Year);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/RenewalMotorData", ReplyAction="http://tempuri.org/IService/RenewalMotorDataResponse")]
        System.Threading.Tasks.Task<string> RenewalMotorDataAsync(string Product, string Agent, string month, string Year);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : AndWebApi.FutureService.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<AndWebApi.FutureService.IService>, AndWebApi.FutureService.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string AgentEnqService(string xml) {
            return base.Channel.AgentEnqService(xml);
        }
        
        public System.Threading.Tasks.Task<string> AgentEnqServiceAsync(string xml) {
            return base.Channel.AgentEnqServiceAsync(xml);
        }
        
        public string CreatePolicy(string Product, string XML) {
            return base.Channel.CreatePolicy(Product, XML);
        }
        
        public System.Threading.Tasks.Task<string> CreatePolicyAsync(string Product, string XML) {
            return base.Channel.CreatePolicyAsync(Product, XML);
        }
        
        public string CreateQuotation(string Product, string XML) {
            return base.Channel.CreateQuotation(Product, XML);
        }
        
        public System.Threading.Tasks.Task<string> CreateQuotationAsync(string Product, string XML) {
            return base.Channel.CreateQuotationAsync(Product, XML);
        }
        
        public string CreateProposal(string Product, string XML) {
            return base.Channel.CreateProposal(Product, XML);
        }
        
        public System.Threading.Tasks.Task<string> CreateProposalAsync(string Product, string XML) {
            return base.Channel.CreateProposalAsync(Product, XML);
        }
        
        public string CreateAndUpdateClient(string XML) {
            return base.Channel.CreateAndUpdateClient(XML);
        }
        
        public System.Threading.Tasks.Task<string> CreateAndUpdateClientAsync(string XML) {
            return base.Channel.CreateAndUpdateClientAsync(XML);
        }
        
        public string CreateAndUpdateClientMultipleAddress(string XML) {
            return base.Channel.CreateAndUpdateClientMultipleAddress(XML);
        }
        
        public System.Threading.Tasks.Task<string> CreateAndUpdateClientMultipleAddressAsync(string XML) {
            return base.Channel.CreateAndUpdateClientMultipleAddressAsync(XML);
        }
        
        public string CreatePolicyWithPayer(string Product, string XML, string PayerID, string multiReceipt) {
            return base.Channel.CreatePolicyWithPayer(Product, XML, PayerID, multiReceipt);
        }
        
        public System.Threading.Tasks.Task<string> CreatePolicyWithPayerAsync(string Product, string XML, string PayerID, string multiReceipt) {
            return base.Channel.CreatePolicyWithPayerAsync(Product, XML, PayerID, multiReceipt);
        }
        
        public string ClientAndorsementService(string XML) {
            return base.Channel.ClientAndorsementService(XML);
        }
        
        public System.Threading.Tasks.Task<string> ClientAndorsementServiceAsync(string XML) {
            return base.Channel.ClientAndorsementServiceAsync(XML);
        }
        
        public string CreateOnlyReceipt(string XML) {
            return base.Channel.CreateOnlyReceipt(XML);
        }
        
        public System.Threading.Tasks.Task<string> CreateOnlyReceiptAsync(string XML) {
            return base.Channel.CreateOnlyReceiptAsync(XML);
        }
        
        public string ClaimAndNCB(string POlicyNo) {
            return base.Channel.ClaimAndNCB(POlicyNo);
        }
        
        public System.Threading.Tasks.Task<string> ClaimAndNCBAsync(string POlicyNo) {
            return base.Channel.ClaimAndNCBAsync(POlicyNo);
        }
        
        public string RenewalCloningService(string XML) {
            return base.Channel.RenewalCloningService(XML);
        }
        
        public System.Threading.Tasks.Task<string> RenewalCloningServiceAsync(string XML) {
            return base.Channel.RenewalCloningServiceAsync(XML);
        }
        
        public System.Data.DataSet FetchPinCode(string Pincode) {
            return base.Channel.FetchPinCode(Pincode);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchPinCodeAsync(string Pincode) {
            return base.Channel.FetchPinCodeAsync(Pincode);
        }
        
        public System.Data.DataSet isClaim(string policyno) {
            return base.Channel.isClaim(policyno);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> isClaimAsync(string policyno) {
            return base.Channel.isClaimAsync(policyno);
        }
        
        public string InspectService(string Product, string XML) {
            return base.Channel.InspectService(Product, XML);
        }
        
        public System.Threading.Tasks.Task<string> InspectServiceAsync(string Product, string XML) {
            return base.Channel.InspectServiceAsync(Product, XML);
        }
        
        public string ClientEnq(string xml) {
            return base.Channel.ClientEnq(xml);
        }
        
        public System.Threading.Tasks.Task<string> ClientEnqAsync(string xml) {
            return base.Channel.ClientEnqAsync(xml);
        }
        
        public System.Data.DataSet FetcheMandateDetails(string PolicyNo) {
            return base.Channel.FetcheMandateDetails(PolicyNo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetcheMandateDetailsAsync(string PolicyNo) {
            return base.Channel.FetcheMandateDetailsAsync(PolicyNo);
        }
        
        public string processcovernote(string msgtext, string mobilenumber) {
            return base.Channel.processcovernote(msgtext, mobilenumber);
        }
        
        public System.Threading.Tasks.Task<string> processcovernoteAsync(string msgtext, string mobilenumber) {
            return base.Channel.processcovernoteAsync(msgtext, mobilenumber);
        }
        
        public string Pos_MispMaster(string xml) {
            return base.Channel.Pos_MispMaster(xml);
        }
        
        public System.Threading.Tasks.Task<string> Pos_MispMasterAsync(string xml) {
            return base.Channel.Pos_MispMasterAsync(xml);
        }
        
        public string ITGI(string XML) {
            return base.Channel.ITGI(XML);
        }
        
        public System.Threading.Tasks.Task<string> ITGIAsync(string XML) {
            return base.Channel.ITGIAsync(XML);
        }
        
        public string HealthRenewal(string XML) {
            return base.Channel.HealthRenewal(XML);
        }
        
        public System.Threading.Tasks.Task<string> HealthRenewalAsync(string XML) {
            return base.Channel.HealthRenewalAsync(XML);
        }
        
        public string GetHBZone(string PinCode) {
            return base.Channel.GetHBZone(PinCode);
        }
        
        public System.Threading.Tasks.Task<string> GetHBZoneAsync(string PinCode) {
            return base.Channel.GetHBZoneAsync(PinCode);
        }
        
        public string CheckDuplicateClient(string Product, string XML) {
            return base.Channel.CheckDuplicateClient(Product, XML);
        }
        
        public System.Threading.Tasks.Task<string> CheckDuplicateClientAsync(string Product, string XML) {
            return base.Channel.CheckDuplicateClientAsync(Product, XML);
        }
        
        public string BankaAgentEnqService(string xml) {
            return base.Channel.BankaAgentEnqService(xml);
        }
        
        public System.Threading.Tasks.Task<string> BankaAgentEnqServiceAsync(string xml) {
            return base.Channel.BankaAgentEnqServiceAsync(xml);
        }
        
        public string HealthCombo(string Product, string XML) {
            return base.Channel.HealthCombo(Product, XML);
        }
        
        public System.Threading.Tasks.Task<string> HealthComboAsync(string Product, string XML) {
            return base.Channel.HealthComboAsync(Product, XML);
        }
        
        public string RenewalMotorData(string Product, string Agent, string month, string Year) {
            return base.Channel.RenewalMotorData(Product, Agent, month, Year);
        }
        
        public System.Threading.Tasks.Task<string> RenewalMotorDataAsync(string Product, string Agent, string month, string Year) {
            return base.Channel.RenewalMotorDataAsync(Product, Agent, month, Year);
        }
    }
}
